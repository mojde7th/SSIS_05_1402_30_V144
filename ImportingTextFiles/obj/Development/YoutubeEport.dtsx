<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="8/16/2023 1:15:44 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-D1T6CSI"
  DTS:CreatorName="DESKTOP-D1T6CSI\98912"
  DTS:DTSID="{DC691CD8-D352-47E6-B974-A1166AE70532}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5131.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="YoutubeEport"
  DTS:PackageType="5"
  DTS:VersionBuild="48"
  DTS:VersionGUID="{E709C3A2-05F8-4580-B5FD-B0E631E12F89}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[DBConn]"
      DTS:CreationName="ADO.NET:System.Data.SqlClient.SqlConnection, System.Data, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089"
      DTS:DTSID="{952B0D50-278E-4C89-A9C3-2C932BD920D0}"
      DTS:ObjectName="DBConn">
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Data Source=.;Initial Catalog=SSIS;Integrated Security=True;Application Name=SSIS-YoutubeEport-{952B0D50-278E-4C89-A9C3-2C932BD920D0}LocalHost.SSIS1;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{D27C6AD4-F5E2-4A27-ABF0-CA57701A8CFA}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="DestinationFolder">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\98912\Desktop</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{55415926-A670-4D6E-ADE4-DF635BEB5488}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileDelimiter">
      <DTS:VariableValue
        DTS:DataType="8">,</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{8B9CCD9E-DE50-4C4C-AEDB-CE642560A643}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileExtension">
      <DTS:VariableValue
        DTS:DataType="8">.csv</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1B20EAAD-1108-414A-9B13-CB5625905750}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName">
      <DTS:VariableValue
        DTS:DataType="8">_140204_Sv33</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B666D880-2C76-4A05-A9BD-401A5EA86561}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="LogFolder">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\98912\Desktop</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F3714266-054E-4B66-B916-4DE44BD578C7}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="TableName">
      <DTS:VariableValue
        DTS:DataType="8">_140204_S</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\access 1 1"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{a64c8600-3f7c-439b-b6dc-a37a4787376e}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="access 1 1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_b02320b1f9af40e5ade63b83e33be183"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::DestinationFolder,User::FileDelimiter,User::FileExtension,User::FileName,User::LogFolder,User::TableName">
          <ProjectItem
            Name="ST_b02320b1f9af40e5ade63b83e33be183.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?><Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003"><PropertyGroup><ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids><Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration><Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform><ProductVersion>8.0.30703</ProductVersion><SchemaVersion>2.0</SchemaVersion><ProjectGuid>{82F2395B-3D4B-4B27-84EC-E9411A646C44}</ProjectGuid><OutputType>Library</OutputType><AppDesignerFolder>Properties</AppDesignerFolder><RootNamespace>ST_11439045e04442f38fd1735105ca8dbb</RootNamespace><AssemblyName>ST_b02320b1f9af40e5ade63b83e33be183</AssemblyName><TargetFrameworkVersion>v4.7</TargetFrameworkVersion><FileAlignment>512</FileAlignment><ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch><TargetFrameworkProfile></TargetFrameworkProfile></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Debug' "><DebugSymbols>true</DebugSymbols><DebugType>full</DebugType><Optimize>false</Optimize><OutputPath>.\bin\Debug\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>DEBUG;TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><PropertyGroup Condition=" '$(Configuration)' == 'Release' "><DebugSymbols>false</DebugSymbols><Optimize>true</Optimize><OutputPath>.\bin\Release\</OutputPath><EnableUnmanagedDebugging>false</EnableUnmanagedDebugging><DefineConstants>TRACE</DefineConstants><ErrorReport>prompt</ErrorReport><WarningLevel>4</WarningLevel></PropertyGroup><ItemGroup><Reference Include="System" /><Reference Include="System.Data" /><Reference Include="System.Windows.Forms" /><Reference Include="System.Xml" /><Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /><Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" /></ItemGroup><ItemGroup><AppDesigner Include="Properties\" /><Compile Include="Properties\AssemblyInfo.cs"><SubType>Code</SubType></Compile><EmbeddedResource Include="Properties\Resources.resx"><Generator>ResXFileCodeGenerator</Generator><LastGenOutput>Resources.Designer.cs</LastGenOutput></EmbeddedResource><Compile Include="Properties\Resources.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Resources.resx</DependentUpon></Compile><None Include="Properties\Settings.settings"><Generator>SettingsSingleFileGenerator</Generator><LastGenOutput>Settings.Designer.cs</LastGenOutput></None><Compile Include="Properties\Settings.Designer.cs"><AutoGen>True</AutoGen><DependentUpon>Settings.settings</DependentUpon></Compile><Compile Include="ScriptMain.cs"><SubType>Code</SubType></Compile></ItemGroup><!-- Include the build rules for a C# project.--><Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" /><ProjectExtensions><VisualStudio><FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}"><ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" /><Host Name="ScriptTask" /><ProjectClient><HostIdentifier>SSIS_ST150</HostIdentifier></ProjectClient></FlavorProperties></VisualStudio></ProjectExtensions></Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_11439045e04442f38fd1735105ca8dbb.Properties.Settings.get_Default():ST_11439045e04442f38fd1735105ca8dbb.Properties.Sett" +
    "ings")]

namespace ST_11439045e04442f38fd1735105ca8dbb.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Data.SqlClient;
using System.Text;
using System.Data.OleDb;

#endregion

namespace ST_11439045e04442f38fd1735105ca8dbb
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{


        public void Main()
        {
            try
            {
                string FileNamePart = Dts.Variables["User::FileName"].Value.ToString();
                string DestinationFolder = Dts.Variables["User::DestinationFolder"].Value.ToString();
                string TableName = Dts.Variables["User::TableName"].Value.ToString();
                string AccessFilePath = $"{DestinationFolder}\\{FileNamePart}.accdb";

                using (SqlConnection myADONETConnection = new SqlConnection())
                {
                    myADONETConnection.ConnectionString = Dts.Connections["DBConn"].ConnectionString;
                    myADONETConnection.Open();

                    using (SqlDataAdapter adapter = new SqlDataAdapter($"SELECT * FROM {TableName}", myADONETConnection))
                    using (DataTable d_table = new DataTable())
                    {
                        adapter.Fill(d_table);

                        using (OleDbConnection oleDbConnection = new OleDbConnection())
                        {
                            string ConnectionString = $"Provider=Microsoft.ACE.OLEDB.12.0;Data Source={AccessFilePath};Persist Security Info=False;";
                            oleDbConnection.ConnectionString = ConnectionString;
                            oleDbConnection.Open();

                            using (OleDbCommand createTableCmd = new OleDbCommand())
                            {
                                createTableCmd.Connection = oleDbConnection;

                                StringBuilder createTableSql = new StringBuilder();
                                createTableSql.Append("CREATE TABLE [");
                                createTableSql.Append(TableName);
                                createTableSql.Append("] (");

                                foreach (DataColumn column in d_table.Columns)
                                {
                                    if (column.ColumnName != "ID")
                                    {
                                        createTableSql.Append("[");
                                        createTableSql.Append(column.ColumnName);
                                        createTableSql.Append("] ");
                                        createTableSql.Append(GetAccessDataType(column.DataType));
                                        createTableSql.Append(",");
                                    }
                                }

                                createTableSql.Length--;
                                createTableSql.Append(")");

                                createTableCmd.CommandText = createTableSql.ToString();
                                createTableCmd.ExecuteNonQuery();
                            }

                            using (OleDbDataAdapter oleDbAdapter = new OleDbDataAdapter($"SELECT * FROM [{TableName}]", oleDbConnection))
                            using (OleDbCommandBuilder cmdBuilder = new OleDbCommandBuilder(oleDbAdapter))
                            {
                                using (DataTable accessTable = new DataTable())
                                {
                                    oleDbAdapter.Fill(accessTable);

                                    foreach (DataRow sqlRow in d_table.Rows)
                                    {
                                        DataRow newRow = accessTable.NewRow();
                                        foreach (DataColumn column in d_table.Columns)
                                        {
                                            if (column.ColumnName != "ID")
                                            {
                                                newRow[column.ColumnName] = ConvertToAccessDataType(sqlRow[column.ColumnName]);
                                            }
                                        }
                                        accessTable.Rows.Add(newRow);
                                    }

                                    oleDbAdapter.Update(accessTable);
                                }
                            }
                        }
                    }

                    Dts.TaskResult = (int)ScriptResults.Success;
                }
            }
            catch (Exception exception)
            {
                using (StreamWriter sw = File.CreateText(Dts.Variables["User::LogFolder"].Value.ToString() + "\\" + "ErrorLog_" + ".log"))
                {
                    sw.WriteLine(exception.ToString());
                    Dts.TaskResult = (int)ScriptResults.Failure;
                }
            }
        }

        private string ConvertToAccessDataType(object value)
        {
            if (value == null || value == DBNull.Value)
            {
                return null;
            }
            else if (value is DateTime)
            {
                return ((DateTime)value).ToString("yyyy-MM-dd HH:mm:ss");
            }
            else
            {
                return value.ToString();
            }
        }

        private string GetAccessDataType(Type dataType)
        {
            if (dataType == typeof(int) || dataType == typeof(long))
            {
                return "LONG";
            }
            else if (dataType == typeof(float) || dataType == typeof(double))
            {
                return "DOUBLE";
            }
            else if (dataType == typeof(decimal))
            {
                return "DECIMAL";
            }
            else if (dataType == typeof(string))
            {
                return "TEXT";
            }
            else if (dataType == typeof(DateTime))
            {
                return "DATETIME";
            }
            else
            {
                return "TEXT";
            }
        }

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        }

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_9895d54656734dcb812b3b07f41cf4dc</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_9895d54656734dcb812b3b07f41cf4dc</msb:DisplayName>
    <msb:ProjectId>{A0B77DBE-7582-4C3B-B3EA-3446A4FC81F2}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_b02320b1f9af40e5ade63b83e33be183.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_11439045e04442f38fd1735105ca8dbb")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_11439045e04442f38fd1735105ca8dbb")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_11439045e04442f38fd1735105ca8dbb.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_11439045e04442f38fd1735105ca8dbb.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_11439045e04442f38fd1735105ca8dbb.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_11439045e04442f38fd1735105ca8dbb.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_11439045e04442f38fd1735105ca8dbb.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_9895d54656734dcb812b3b07f41cf4dc.dll">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
DgCSBUcADgACAkcADgC9APAFDgCnBUcABgAvARYABgBkBhYABgAKBSMFBgABACMFBgAEASMFBgAH
ACMFBgAoASMFBgD9ACMFBgCtBCMFBgB2CIAFAAAAAA0AAAAAAAEAAQABABAAQAVlADkAAQABAAAA
EADwBkwHdQABAAUAAAEQAIkHTAeZAAMACQADAQAA0QcAAIEABAAMABEALwU0AREA1gE5AREAzgA+
AQYGPwBCAVaAwQdFAVaAtgFFAVAgAAAAAIYARgUGAAEAdCUAAAAAgQCDAUkBAQCwJQAAAACBAJsB
TgECAF4mAAAAAIYYqQYGAAMAZiYAAAAAgxipBgYAAwBuJgAAAACTCDEGVAEDAJomAAAAAJMIvgFa
AQMAoSYAAAAAkwjKAWABAwCpJgAAAACWCPYHZwEEALAmAAAAAIYYqQYGAAQAuCYAAAAAkRivBmwB
BAAAAAEA/AMAAAEArQEAAAEA/AMJAKkGAQARAKkGBgAZAKkGCgApAKkGEAAxAKkGEAA5AKkGEABB
AKkGEABJAKkGEABRAKkGEABZAKkGEABhAKkGEABpAKkGBgAJAakGBgApAakGFQA5AakGBgBxAMkH
SABBAXsHTgBJAREFVABRAfIDWwDpAEYEXwBZAegHYwB5AKkGBgBBAbEHawBhAREFcQBpARwEXwBx
ATEEEABxATsFBgBZAegHeACBAKkGfgCJAKkGBgB5AQUFhQCRAKkGBgBZAegHiwCZAKkGBgCZALkF
kgChAKkGBgChAMcAmACJAJIHngCJAZsGpACpACcIWwCxADQBXwBZAZsIqQCxAHYBrwCpADMItAC5
ADUCBgChAE8EuAChAFoEAQCRAUgIEACRAX8IuADBAKkGvADJAKkGwwCJAN8HyQCJAGsIzwDRABEF
1ADRABoF2QCZAbYA3wB5AT0ChQBBAQIIAQChAVgI5QCpAWwBEACxAfYD8ADxAEYE9QD5ABYB+gD5
AI8IAgFxAKkGBgDpAKkGBgD5AHIICgERAakGEAExAakGBgAIABQAKgEIABgALwEpAHMAqQEuAAsA
gQEuABMAigEuABsAqQEuACMAsgEuACsA2wEuADMA2wEuADsA2wEuAEMAsgEuAEsA4QEuAFMA2wEu
AFsA+AFDAGMALwFJAHMAqQFhAHsALwFjAGsALwEcAOsAAwABAAQAAwAAADUGcAEAAN4BdgEAAPoH
fAECAAYAAwACAAcABQABAAgABQACAAkABwAEgAAAAQAAALQhB3kAAAAAAACSAAAABAAAAAAAAAAA
AAAAGAGJAAAAAAAPAAAAAAAAAAAAAAAhAWUEAAAAAAQAAAAAAAAAAAAAABgBRwAAAAAABAAAAAAA
AAAAAAAAGAEjBQAAAAAPAAAAAAAAAAAAAAAhASAAAAAAAAAAAAABAAAA+gYAAAUAAgAAAAAAAElu
dDMyAEludDY0ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWRE
VFMAdmFsdWVfXwBTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5PbGVEYgBTVF8xMTQzOTA0NWUwNDQ0
MmYzOGZkMTczNTEwNWNhOGRiYgBtc2NvcmxpYgBTVF85ODk1ZDU0NjU2NzM0ZGNiODEyYjNiMDdm
NDFjZjRkYwBBZGQAT2xlRGJDb21tYW5kAEFwcGVuZABkZWZhdWx0SW5zdGFuY2UARGF0YVRhYmxl
AFZhcmlhYmxlAElEaXNwb3NhYmxlAERvdWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBTaW5nbGUARmlsZQBnZXRfQ29sdW1uTmFtZQBEYXRlVGltZQBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5SdW50aW1lAFdyaXRlTGluZQBnZXRfRGF0YVR5cGUAQ29udmVydFRvQWNjZXNz
RGF0YVR5cGUAR2V0QWNjZXNzRGF0YVR5cGUAZGF0YVR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBz
ZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAElu
dGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UA
VXBkYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERl
YnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93
c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0
dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9u
c0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRy
aWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0
dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUAU3lz
dGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBnZXRfQ29ubmVjdGlvblN0cmluZwBzZXRfQ29ubmVjdGlv
blN0cmluZwBUb1N0cmluZwBnZXRfTGVuZ3RoAHNldF9MZW5ndGgATWljcm9zb2Z0LlNxbFNlcnZl
ci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sARGVj
aW1hbABTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfOTg5NWQ1NDY1
NjczNGRjYjgxMmIzYjA3ZjQxY2Y0ZGMuZGxsAEZpbGwAREJOdWxsAGdldF9JdGVtAHNldF9JdGVt
AFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAE9wZW4AU2NyaXB0TWFpbgBEYXRhQ29sdW1uAFN5c3Rl
bS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAERh
dGFDb2x1bW5Db2xsZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAHNldF9Db25uZWN0aW9uAE9sZURi
Q29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAEV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AQ3Vs
dHVyZUluZm8AT2xlRGJDb21tYW5kQnVpbGRlcgBTdHJpbmdCdWlsZGVyAGdldF9SZXNvdXJjZU1h
bmFnZXIAQ29ubmVjdGlvbk1hbmFnZXIAU3RyZWFtV3JpdGVyAFRleHRXcml0ZXIAT2xlRGJEYXRh
QWRhcHRlcgBTcWxEYXRhQWRhcHRlcgBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5j
Y3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBT
eXN0ZW0uUmVzb3VyY2VzAFNUXzExNDM5MDQ1ZTA0NDQyZjM4ZmQxNzM1MTA1Y2E4ZGJiLlByb3Bl
cnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF8xMTQzOTA0NWUwNDQ0
MmYzOGZkMTczNTEwNWNhOGRiYi5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAZ2V0
X0NvbHVtbnMAU3lzdGVtLkNvbGxlY3Rpb25zAGdldF9Db25uZWN0aW9ucwBTdWNjZXNzAGdldF9E
dHMAU2NyaXB0UmVzdWx0cwBnZXRfUm93cwBDb25jYXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9U
YXNrUmVzdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABnZXRfQ3VycmVudABNb3ZlTmV4dABTeXN0
ZW0uVGV4dABzZXRfQ29tbWFuZFRleHQAQ3JlYXRlVGV4dABEYXRhUm93AE5ld1JvdwBnZXRfQXNz
ZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AG9wX0VxdWFsaXR5AG9wX0luZXF1YWxpdHkAAAAAAB1VAHMA
ZQByADoAOgBGAGkAbABlAE4AYQBtAGUAAC9VAHMAZQByADoAOgBEAGUAcwB0AGkAbgBhAHQAaQBv
AG4ARgBvAGwAZABlAHIAAB9VAHMAZQByADoAOgBUAGEAYgBsAGUATgBhAG0AZQAAA1wAAA0uAGEA
YwBjAGQAYgAADUQAQgBDAG8AbgBuAAAdUwBFAEwARQBDAFQAIAAqACAARgBSAE8ATQAgAABdUABy
AG8AdgBpAGQAZQByAD0ATQBpAGMAcgBvAHMAbwBmAHQALgBBAEMARQAuAE8ATABFAEQAQgAuADEA
MgAuADAAOwBEAGEAdABhACAAUwBvAHUAcgBjAGUAPQAAOzsAUABlAHIAcwBpAHMAdAAgAFMAZQBj
AHUAcgBpAHQAeQAgAEkAbgBmAG8APQBGAGEAbABzAGUAOwAAHUMAUgBFAEEAVABFACAAVABBAEIA
TABFACAAWwAAB10AIAAoAAAFSQBEAAADWwAABV0AIAAAAywAAAMpAAAfUwBFAEwARQBDAFQAIAAq
ACAARgBSAE8ATQAgAFsAAANdAAAfVQBzAGUAcgA6ADoATABvAGcARgBvAGwAZABlAHIAAB1cAEUA
cgByAG8AcgBMAG8AZwBfAC4AbABvAGcAACd5AHkAeQB5AC0ATQBNAC0AZABkACAASABIADoAbQBt
ADoAcwBzAAEJTABPAE4ARwAADUQATwBVAEIATABFAAAPRABFAEMASQBNAEEATAAACVQARQBYAFQA
ABFEAEEAVABFAFQASQBNAEUAAHFTAFQAXwAxADEANAAzADkAMAA0ADUAZQAwADQANAA0ADIAZgAz
ADgAZgBkADEANwAzADUAMQAwADUAYwBhADgAZABiAGIALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4A
UgBlAHMAbwB1AHIAYwBlAHMAAAAAAE5z5P2BElFFoTvndhSRdnkABCABAQgDIAABBSABARERBCAB
AQ4GIAEBEYCRKwcXDg4OEj0SQRJFEkkOEk0SURJVElkSXQgSYRJlEkUSaRJpElUSWRJtEnEFIAAS
gKEFIAASgKUGIAESgKkcAyAAHAMgAA4HAAQODg4ODgUgABKAsQYgARKAtRwFAAIODg4GIAIBDhI9
BSABCBJFBgADDg4ODgUgAQESSQUgARJRDgUgABKAwQQgABJVBQACAg4OBCAAEn0DIAACAyAACAYg
AgEOEkkFIAEBEmEFIAASgM0EIAASaQQgARwOBSACAQ4cBSABARJpBQABEnEOBAcBEXkEBhKA2QQg
AQ4OBwABEn0RgOEHAAICEn0SfQUgABKA9QcgAgEOEoD1CLd6XFYZNOCJCImEXc2AgMyRBAAAAAAE
AQAAAAQGEoCJBAYSgI0DBhIQAgYIAwYRFAQgAQ4cBSABDhJ9BQAAEoCJBQAAEoCNBgABARKAjQQA
ABIQAwAAAQUIABKAiQUIABKAjQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQgBAAIAAAAAACgBACNTVF8xMTQzOTA0NWUwNDQ0MmYzOGZkMTczNTEwNWNhOGRiYgAA
BQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIzAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwAAtAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAAJA7AAAAAAAAAAAAAKo7AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACcOwAAAAAAAAAAAAAA
AF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAHebQhAAABAAd5tCE/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfADEAMQA0ADMAOQAwADQANQBlADAANAA0ADQAMgBmADMAOABmAGQAMQA3ADMANQAxADAANQBj
AGEAOABkAGIAYgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4ADYA
MgA4AC4AMwAwADkAOAAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
ADkAOAA5ADUAZAA1ADQANgA1ADYANwAzADQAZABjAGIAOAAxADIAYgAzAGIAMAA3AGYANAAxAGMA
ZgA0AGQAYwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQA
ZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBUAF8AOQA4ADkANQBkADUANAA2ADUANgA3ADMANABkAGMAYgA4ADEAMgBiADMAYgAwADcA
ZgA0ADEAYwBmADQAZABjAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAVABfADEAMQA0ADMAOQAwADQANQBlADAANAA0ADQAMgBmADMAOABmAGQAMQA3ADMANQAxADAA
NQBjAGEAOABkAGIAYgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4AOAA2ADIAOAAuADMAMAA5ADgAMwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4AOAA2ADIAOAAuADMAMAA5ADgAMwAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAC8OwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\access Bigint error"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:Disabled="True"
      DTS:DTSID="{be85ee92-7c70-4e07-8741-015cb3ecc943}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="access Bigint error"
      DTS:ThreadHint="1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_9895d54656734dcb812b3b07f41cf4dc"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::DestinationFolder,User::FileDelimiter,User::FileExtension,User::FileName,User::LogFolder,User::TableName">
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_11439045e04442f38fd1735105ca8dbb")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_11439045e04442f38fd1735105ca8dbb")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_9895d54656734dcb812b3b07f41cf4dc.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{82F2395B-3D4B-4B27-84EC-E9411A646C44}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_11439045e04442f38fd1735105ca8dbb</RootNamespace>
    <AssemblyName>ST_9895d54656734dcb812b3b07f41cf4dc</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Data.SqlClient;
using System.Text;
using System.Data.OleDb;

#endregion

namespace ST_11439045e04442f38fd1735105ca8dbb
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{


        public void Main()
        {
            try
            {
                string FileNamePart = Dts.Variables["User::FileName"].Value.ToString();
                string DestinationFolder = Dts.Variables["User::DestinationFolder"].Value.ToString();
                string TableName = Dts.Variables["User::TableName"].Value.ToString();
                string AccessFilePath = $"{DestinationFolder}\\{FileNamePart}.accdb";

                using (SqlConnection myADONETConnection = new SqlConnection())
                {
                    myADONETConnection.ConnectionString = Dts.Connections["DBConn"].ConnectionString;
                    myADONETConnection.Open();

                    using (SqlDataAdapter adapter = new SqlDataAdapter($"SELECT * FROM {TableName}", myADONETConnection))
                    using (DataTable d_table = new DataTable())
                    {
                        adapter.Fill(d_table);

                        using (OleDbConnection oleDbConnection = new OleDbConnection())
                        {
                            string ConnectionString = $"Provider=Microsoft.ACE.OLEDB.12.0;Data Source={AccessFilePath};Persist Security Info=False;";
                            oleDbConnection.ConnectionString = ConnectionString;
                            oleDbConnection.Open();

                            using (OleDbCommand createTableCmd = new OleDbCommand())
                            {
                                createTableCmd.Connection = oleDbConnection;

                                StringBuilder createTableSql = new StringBuilder();
                                createTableSql.Append("CREATE TABLE [");
                                createTableSql.Append(TableName);
                                createTableSql.Append("] (");

                                foreach (DataColumn column in d_table.Columns)
                                {
                                    if (column.ColumnName != "ID")
                                    {
                                        createTableSql.Append("[");
                                        createTableSql.Append(column.ColumnName);
                                        createTableSql.Append("] ");
                                        createTableSql.Append(GetAccessDataType(column.DataType));
                                        createTableSql.Append(",");
                                    }
                                }

                                createTableSql.Length--;
                                createTableSql.Append(")");

                                createTableCmd.CommandText = createTableSql.ToString();
                                createTableCmd.ExecuteNonQuery();
                            }

                            using (OleDbDataAdapter oleDbAdapter = new OleDbDataAdapter($"SELECT * FROM [{TableName}]", oleDbConnection))
                            using (OleDbCommandBuilder cmdBuilder = new OleDbCommandBuilder(oleDbAdapter))
                            {
                                using (DataTable accessTable = new DataTable())
                                {
                                    oleDbAdapter.Fill(accessTable);

                                    foreach (DataRow sqlRow in d_table.Rows)
                                    {
                                        DataRow newRow = accessTable.NewRow();
                                        foreach (DataColumn column in d_table.Columns)
                                        {
                                            if (column.ColumnName != "ID")
                                            {
                                                newRow[column.ColumnName] = ConvertToAccessDataType(sqlRow[column.ColumnName]);
                                            }
                                        }
                                        accessTable.Rows.Add(newRow);
                                    }

                                    oleDbAdapter.Update(accessTable);
                                }
                            }
                        }
                    }

                    Dts.TaskResult = (int)ScriptResults.Success;
                }
            }
            catch (Exception exception)
            {
                using (StreamWriter sw = File.CreateText(Dts.Variables["User::LogFolder"].Value.ToString() + "\\" + "ErrorLog_" + ".log"))
                {
                    sw.WriteLine(exception.ToString());
                    Dts.TaskResult = (int)ScriptResults.Failure;
                }
            }
        }

        private string ConvertToAccessDataType(object value)
        {
            if (value == null || value == DBNull.Value)
            {
                return null;
            }
            else if (value is DateTime)
            {
                return ((DateTime)value).ToString("yyyy-MM-dd HH:mm:ss");
            }
            else
            {
                return value.ToString();
            }
        }

        private string GetAccessDataType(Type dataType)
        {
            if (dataType == typeof(int) || dataType == typeof(long))
            {
                return "LONG";
            }
            else if (dataType == typeof(float) || dataType == typeof(double))
            {
                return "DOUBLE";
            }
            else if (dataType == typeof(decimal))
            {
                return "DECIMAL";
            }
            else if (dataType == typeof(string))
            {
                return "TEXT";
            }
            else if (dataType == typeof(DateTime))
            {
                return "DATETIME";
            }
            else
            {
                return "TEXT";
            }
        }

        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        }

    }
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_9895d54656734dcb812b3b07f41cf4dc</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_9895d54656734dcb812b3b07f41cf4dc</msb:DisplayName>
    <msb:ProjectId>{A0B77DBE-7582-4C3B-B3EA-3446A4FC81F2}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_9895d54656734dcb812b3b07f41cf4dc.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_11439045e04442f38fd1735105ca8dbb.Properties.Settings.get_Default():ST_11439045e04442f38fd1735105ca8dbb.Properties.Sett" +
    "ings")]

namespace ST_11439045e04442f38fd1735105ca8dbb.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_11439045e04442f38fd1735105ca8dbb.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_11439045e04442f38fd1735105ca8dbb.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_11439045e04442f38fd1735105ca8dbb.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_11439045e04442f38fd1735105ca8dbb.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_11439045e04442f38fd1735105ca8dbb.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_9895d54656734dcb812b3b07f41cf4dc.dll">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
DgCSBUcADgACAkcADgC9APAFDgCnBUcABgAvARYABgBkBhYABgAKBSMFBgABACMFBgAEASMFBgAH
ACMFBgAoASMFBgD9ACMFBgCtBCMFBgB2CIAFAAAAAA0AAAAAAAEAAQABABAAQAVlADkAAQABAAAA
EADwBkwHdQABAAUAAAEQAIkHTAeZAAMACQADAQAA0QcAAIEABAAMABEALwU0AREA1gE5AREAzgA+
AQYGPwBCAVaAwQdFAVaAtgFFAVAgAAAAAIYARgUGAAEAdCUAAAAAgQCDAUkBAQCwJQAAAACBAJsB
TgECAF4mAAAAAIYYqQYGAAMAZiYAAAAAgxipBgYAAwBuJgAAAACTCDEGVAEDAJomAAAAAJMIvgFa
AQMAoSYAAAAAkwjKAWABAwCpJgAAAACWCPYHZwEEALAmAAAAAIYYqQYGAAQAuCYAAAAAkRivBmwB
BAAAAAEA/AMAAAEArQEAAAEA/AMJAKkGAQARAKkGBgAZAKkGCgApAKkGEAAxAKkGEAA5AKkGEABB
AKkGEABJAKkGEABRAKkGEABZAKkGEABhAKkGEABpAKkGBgAJAakGBgApAakGFQA5AakGBgBxAMkH
SABBAXsHTgBJAREFVABRAfIDWwDpAEYEXwBZAegHYwB5AKkGBgBBAbEHawBhAREFcQBpARwEXwBx
ATEEEABxATsFBgBZAegHeACBAKkGfgCJAKkGBgB5AQUFhQCRAKkGBgBZAegHiwCZAKkGBgCZALkF
kgChAKkGBgChAMcAmACJAJIHngCJAZsGpACpACcIWwCxADQBXwBZAZsIqQCxAHYBrwCpADMItAC5
ADUCBgChAE8EuAChAFoEAQCRAUgIEACRAX8IuADBAKkGvADJAKkGwwCJAN8HyQCJAGsIzwDRABEF
1ADRABoF2QCZAbYA3wB5AT0ChQBBAQIIAQChAVgI5QCpAWwBEACxAfYD8ADxAEYE9QD5ABYB+gD5
AI8IAgFxAKkGBgDpAKkGBgD5AHIICgERAakGEAExAakGBgAIABQAKgEIABgALwEpAHMAqQEuAAsA
gQEuABMAigEuABsAqQEuACMAsgEuACsA2wEuADMA2wEuADsA2wEuAEMAsgEuAEsA4QEuAFMA2wEu
AFsA+AFDAGMALwFJAHMAqQFhAHsALwFjAGsALwEcAOsAAwABAAQAAwAAADUGcAEAAN4BdgEAAPoH
fAECAAYAAwACAAcABQABAAgABQACAAkABwAEgAAAAQAAALQhB3kAAAAAAACSAAAABAAAAAAAAAAA
AAAAGAGJAAAAAAAPAAAAAAAAAAAAAAAhAWUEAAAAAAQAAAAAAAAAAAAAABgBRwAAAAAABAAAAAAA
AAAAAAAAGAEjBQAAAAAPAAAAAAAAAAAAAAAhASAAAAAAAAAAAAABAAAA+gYAAAUAAgAAAAAAAElu
dDMyAEludDY0ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWRE
VFMAdmFsdWVfXwBTeXN0ZW0uRGF0YQBTeXN0ZW0uRGF0YS5PbGVEYgBTVF8xMTQzOTA0NWUwNDQ0
MmYzOGZkMTczNTEwNWNhOGRiYgBtc2NvcmxpYgBTVF85ODk1ZDU0NjU2NzM0ZGNiODEyYjNiMDdm
NDFjZjRkYwBBZGQAT2xlRGJDb21tYW5kAEFwcGVuZABkZWZhdWx0SW5zdGFuY2UARGF0YVRhYmxl
AFZhcmlhYmxlAElEaXNwb3NhYmxlAERvdWJsZQBSdW50aW1lVHlwZUhhbmRsZQBHZXRUeXBlRnJv
bUhhbmRsZQBTaW5nbGUARmlsZQBnZXRfQ29sdW1uTmFtZQBEYXRlVGltZQBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5SdW50aW1lAFdyaXRlTGluZQBnZXRfRGF0YVR5cGUAQ29udmVydFRvQWNjZXNz
RGF0YVR5cGUAR2V0QWNjZXNzRGF0YVR5cGUAZGF0YVR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBz
ZXRfQ3VsdHVyZQByZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAElu
dGVybmFsRGF0YUNvbGxlY3Rpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UA
VXBkYXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAERl
YnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUARGVidWdnYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93
c2FibGVBdHRyaWJ1dGUAQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0
dHJpYnV0ZQBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0
cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQ29tcGlsYXRpb25SZWxheGF0aW9u
c0F0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRy
aWJ1dGUAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0
dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBnZXRfVmFsdWUAdmFsdWUAU3lz
dGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBnZXRfQ29ubmVjdGlvblN0cmluZwBzZXRfQ29ubmVjdGlv
blN0cmluZwBUb1N0cmluZwBnZXRfTGVuZ3RoAHNldF9MZW5ndGgATWljcm9zb2Z0LlNxbFNlcnZl
ci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sARGVj
aW1hbABTY3JpcHRPYmplY3RNb2RlbABTeXN0ZW0uQ29tcG9uZW50TW9kZWwAU1RfOTg5NWQ1NDY1
NjczNGRjYjgxMmIzYjA3ZjQxY2Y0ZGMuZGxsAEZpbGwAREJOdWxsAGdldF9JdGVtAHNldF9JdGVt
AFN5c3RlbQBFbnVtAHJlc291cmNlTWFuAE9wZW4AU2NyaXB0TWFpbgBEYXRhQ29sdW1uAFN5c3Rl
bS5Db25maWd1cmF0aW9uAFN5c3RlbS5HbG9iYWxpemF0aW9uAFN5c3RlbS5SZWZsZWN0aW9uAERh
dGFDb2x1bW5Db2xsZWN0aW9uAERhdGFSb3dDb2xsZWN0aW9uAHNldF9Db25uZWN0aW9uAE9sZURi
Q29ubmVjdGlvbgBTcWxDb25uZWN0aW9uAEV4Y2VwdGlvbgBTeXN0ZW0uRGF0YS5Db21tb24AQ3Vs
dHVyZUluZm8AT2xlRGJDb21tYW5kQnVpbGRlcgBTdHJpbmdCdWlsZGVyAGdldF9SZXNvdXJjZU1h
bmFnZXIAQ29ubmVjdGlvbk1hbmFnZXIAU3RyZWFtV3JpdGVyAFRleHRXcml0ZXIAT2xlRGJEYXRh
QWRhcHRlcgBTcWxEYXRhQWRhcHRlcgBJRW51bWVyYXRvcgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5j
Y3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBT
eXN0ZW0uUmVzb3VyY2VzAFNUXzExNDM5MDQ1ZTA0NDQyZjM4ZmQxNzM1MTA1Y2E4ZGJiLlByb3Bl
cnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdNb2RlcwBTVF8xMTQzOTA0NWUwNDQ0
MmYzOGZkMTczNTEwNWNhOGRiYi5Qcm9wZXJ0aWVzAGdldF9WYXJpYWJsZXMAU2V0dGluZ3MAZ2V0
X0NvbHVtbnMAU3lzdGVtLkNvbGxlY3Rpb25zAGdldF9Db25uZWN0aW9ucwBTdWNjZXNzAGdldF9E
dHMAU2NyaXB0UmVzdWx0cwBnZXRfUm93cwBDb25jYXQAT2JqZWN0AGdldF9EZWZhdWx0AHNldF9U
YXNrUmVzdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABnZXRfQ3VycmVudABNb3ZlTmV4dABTeXN0
ZW0uVGV4dABzZXRfQ29tbWFuZFRleHQAQ3JlYXRlVGV4dABEYXRhUm93AE5ld1JvdwBnZXRfQXNz
ZW1ibHkARXhlY3V0ZU5vblF1ZXJ5AG9wX0VxdWFsaXR5AG9wX0luZXF1YWxpdHkAAAAAAB1VAHMA
ZQByADoAOgBGAGkAbABlAE4AYQBtAGUAAC9VAHMAZQByADoAOgBEAGUAcwB0AGkAbgBhAHQAaQBv
AG4ARgBvAGwAZABlAHIAAB9VAHMAZQByADoAOgBUAGEAYgBsAGUATgBhAG0AZQAAA1wAAA0uAGEA
YwBjAGQAYgAADUQAQgBDAG8AbgBuAAAdUwBFAEwARQBDAFQAIAAqACAARgBSAE8ATQAgAABdUABy
AG8AdgBpAGQAZQByAD0ATQBpAGMAcgBvAHMAbwBmAHQALgBBAEMARQAuAE8ATABFAEQAQgAuADEA
MgAuADAAOwBEAGEAdABhACAAUwBvAHUAcgBjAGUAPQAAOzsAUABlAHIAcwBpAHMAdAAgAFMAZQBj
AHUAcgBpAHQAeQAgAEkAbgBmAG8APQBGAGEAbABzAGUAOwAAHUMAUgBFAEEAVABFACAAVABBAEIA
TABFACAAWwAAB10AIAAoAAAFSQBEAAADWwAABV0AIAAAAywAAAMpAAAfUwBFAEwARQBDAFQAIAAq
ACAARgBSAE8ATQAgAFsAAANdAAAfVQBzAGUAcgA6ADoATABvAGcARgBvAGwAZABlAHIAAB1cAEUA
cgByAG8AcgBMAG8AZwBfAC4AbABvAGcAACd5AHkAeQB5AC0ATQBNAC0AZABkACAASABIADoAbQBt
ADoAcwBzAAEJTABPAE4ARwAADUQATwBVAEIATABFAAAPRABFAEMASQBNAEEATAAACVQARQBYAFQA
ABFEAEEAVABFAFQASQBNAEUAAHFTAFQAXwAxADEANAAzADkAMAA0ADUAZQAwADQANAA0ADIAZgAz
ADgAZgBkADEANwAzADUAMQAwADUAYwBhADgAZABiAGIALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4A
UgBlAHMAbwB1AHIAYwBlAHMAAAAAAE5z5P2BElFFoTvndhSRdnkABCABAQgDIAABBSABARERBCAB
AQ4GIAEBEYCRKwcXDg4OEj0SQRJFEkkOEk0SURJVElkSXQgSYRJlEkUSaRJpElUSWRJtEnEFIAAS
gKEFIAASgKUGIAESgKkcAyAAHAMgAA4HAAQODg4ODgUgABKAsQYgARKAtRwFAAIODg4GIAIBDhI9
BSABCBJFBgADDg4ODgUgAQESSQUgARJRDgUgABKAwQQgABJVBQACAg4OBCAAEn0DIAACAyAACAYg
AgEOEkkFIAEBEmEFIAASgM0EIAASaQQgARwOBSACAQ4cBSABARJpBQABEnEOBAcBEXkEBhKA2QQg
AQ4OBwABEn0RgOEHAAICEn0SfQUgABKA9QcgAgEOEoD1CLd6XFYZNOCJCImEXc2AgMyRBAAAAAAE
AQAAAAQGEoCJBAYSgI0DBhIQAgYIAwYRFAQgAQ4cBSABDhJ9BQAAEoCJBQAAEoCNBgABARKAjQQA
ABIQAwAAAQUIABKAiQUIABKAjQQIABIQCAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9u
VGhyb3dzAQgBAAIAAAAAACgBACNTVF8xMTQzOTA0NWUwNDQ0MmYzOGZkMTczNTEwNWNhOGRiYgAA
BQEAAAAAFgEAEUNvcHlyaWdodCBAICAyMDIzAABJAQAaLk5FVEZyYW1ld29yayxWZXJzaW9uPXY0
LjcBAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEi5ORVQgRnJhbWV3b3JrIDQuNwAAtAAAAM7K774B
AAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lv
bj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUw
ODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQ
tAAAAJA7AAAAAAAAAAAAAKo7AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACcOwAAAAAAAAAAAAAA
AF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB
ABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAA
WEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9
BO/+AAABAAAAAQAHebQhAAABAAd5tCE/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEA
VgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAA
AAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAwADAA
NABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4AeQBO
AGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMA
VABfADEAMQA0ADMAOQAwADQANQBlADAANAA0ADQAMgBmADMAOABmAGQAMQA3ADMANQAxADAANQBj
AGEAOABkAGIAYgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4ADYA
MgA4AC4AMwAwADkAOAAzAAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMAVABf
ADkAOAA5ADUAZAA1ADQANgA1ADYANwAzADQAZABjAGIAOAAxADIAYgAzAGIAMAA3AGYANAAxAGMA
ZgA0AGQAYwAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBv
AHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQAcgBhAGQA
ZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBl
AAAAUwBUAF8AOQA4ADkANQBkADUANAA2ADUANgA3ADMANABkAGMAYgA4ADEAMgBiADMAYgAwADcA
ZgA0ADEAYwBmADQAZABjAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUAAAAA
AFMAVABfADEAMQA0ADMAOQAwADQANQBlADAANAA0ADQAMgBmADMAOABmAGQAMQA3ADMANQAxADAA
NQBjAGEAOABkAGIAYgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEALgAw
AC4AOAA2ADIAOAAuADMAMAA5ADgAMwAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4AOAA2ADIAOAAuADMAMAA5ADgAMwAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAC8OwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\csv ok"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:Disabled="True"
      DTS:DTSID="{40E23092-B731-4818-B893-8A2712D29A42}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="csv ok"
      DTS:ThreadHint="2">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_11439045e04442f38fd1735105ca8dbb"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::DestinationFolder,User::FileDelimiter,User::FileExtension,User::FileName,User::LogFolder,User::TableName">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.IO;
using System.Data.SqlClient;
using System.Text;
#endregion

namespace ST_11439045e04442f38fd1735105ca8dbb
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


        /// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
        public void Main()
        {
            try
            {
                // Declare Variables
                string FileNamePart = Dts.Variables["User::FileName"].Value.ToString();
                string DestinationFolder = Dts.Variables["User::DestinationFolder"].Value.ToString();
                string TableName = Dts.Variables["User::TableName"].Value.ToString();
                string FileDelimiter = Dts.Variables["User::FileDelimiter"].Value.ToString();
                string FileExtension = Dts.Variables["User::FileExtension"].Value.ToString();

                // USE ADO.NET Connection from SSIS Package to get data from table
                using (SqlConnection myADONETConnection = new SqlConnection())
                {
                    myADONETConnection.ConnectionString = Dts.Connections["DBConn"].ConnectionString;
                    myADONETConnection.Open();

                    // Read data from table or view to data table
                    string query = "Select * From " + TableName;
                    using (SqlCommand cmd = new SqlCommand(query, myADONETConnection))
                    {
                        DataTable d_table = new DataTable();
                        d_table.Load(cmd.ExecuteReader());

                        string FileFullPath = DestinationFolder + "\\" + FileNamePart + "_" + FileExtension;

                        using (StreamWriter sw = new StreamWriter(FileFullPath, false, Encoding.UTF8))
                        {
                            int ColumnCount = d_table.Columns.Count;

                            for (int ic = 0; ic < ColumnCount; ic++)
                            {
                                sw.Write(d_table.Columns[ic]);

                                if (ic < ColumnCount - 1)
                                {
                                    sw.Write(FileDelimiter);
                                }
                            }

                            sw.Write(sw.NewLine);

                            foreach (DataRow dr in d_table.Rows)
                            {
                                for (int ir = 0; ir < ColumnCount; ir++)
                                {
                                    if (!Convert.IsDBNull(dr[ir]))
                                    {
                                        sw.Write(dr[ir].ToString());
                                    }

                                    if (ir < ColumnCount - 1)
                                    {
                                        sw.Write(FileDelimiter);
                                    }
                                }
                                sw.Write(sw.NewLine);
                            }
                        }

                        Dts.TaskResult = (int)ScriptResults.Success;
                    }
                }
            }
            catch (Exception exception)
            {
                // Create Log File for Errors
                using (StreamWriter sw = File.CreateText(Dts.Variables["User::LogFolder"].Value.ToString() + "\\" + "ErrorLog_" + ".log"))
                {
                    sw.WriteLine(exception.ToString());
                    Dts.TaskResult = (int)ScriptResults.Failure;
                }
            }
        }


        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_11439045e04442f38fd1735105ca8dbb</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_11439045e04442f38fd1735105ca8dbb</msb:DisplayName>
    <msb:ProjectId>{975A292A-F422-44CD-ADC9-C8103D514324}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_11439045e04442f38fd1735105ca8dbb.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_11439045e04442f38fd1735105ca8dbb.Properties.Settings.get_Default():ST_11439045e04442f38fd1735105ca8dbb.Properties.Sett" +
    "ings")]

namespace ST_11439045e04442f38fd1735105ca8dbb.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_11439045e04442f38fd1735105ca8dbb.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{82F2395B-3D4B-4B27-84EC-E9411A646C44}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_11439045e04442f38fd1735105ca8dbb</RootNamespace>
    <AssemblyName>ST_11439045e04442f38fd1735105ca8dbb</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_11439045e04442f38fd1735105ca8dbb")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_11439045e04442f38fd1735105ca8dbb")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_11439045e04442f38fd1735105ca8dbb.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_11439045e04442f38fd1735105ca8dbb.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_11439045e04442f38fd1735105ca8dbb.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_11439045e04442f38fd1735105ca8dbb.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_11439045e04442f38fd1735105ca8dbb.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_11439045e04442f38fd1735105ca8dbb.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADaz3GQAAAAAAAAAAOAAIiALATAAABYAAAAIAAAAAAAAujUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAGAAAAAAAAAACAAAAAAgAAAAAAAAMAYIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGg1AABPAAAAAEAAAHgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAwBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAHgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACc
NQAAAAAAAEgAAAACAAUAACQAALAQAAABAAAAAAAAALA0AAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAABswBACnAgAAAQAAEQIoEAAACm8RAAAKcgEAAHBvEgAACm8T
AAAKbxQAAAoKAigQAAAKbxEAAApyHwAAcG8SAAAKbxMAAApvFAAACgsCKBAAAApvEQAACnJPAABw
bxIAAApvEwAACm8UAAAKDAIoEAAACm8RAAAKcm8AAHBvEgAACm8TAAAKbxQAAAoNAigQAAAKbxEA
AApylwAAcG8SAAAKbxMAAApvFAAAChMEcxUAAAoTBREFAigQAAAKbxYAAApyvwAAcG8XAAAKbxgA
AApvGQAAChEFbxoAAApyzQAAcAgoGwAAChEFcxwAAAoTBnMdAAAKEwcRBxEGbx4AAApvHwAAChuN
JgAAASUWB6IlF3LrAABwoiUYBqIlGXLvAABwoiUaEQSiKCAAAAoWKCEAAApzIgAAChMIEQdvIwAA
Cm8kAAAKEwkWEworKxEIEQdvIwAAChEKbyUAAApvJgAAChEKEQkXWS8IEQgJbycAAAoRChdYEwoR
ChEJMs8RCBEIbygAAApvJwAAChEHbykAAApvKgAAChMLK2IRC28rAAAKdBQAAAETDBYTDSs7EQwR
DW8sAAAKKC0AAAotFREIEQwRDW8sAAAKbxQAAApvJwAAChENEQkXWS8IEQgJbycAAAoRDRdYEw0R
DREJMr8RCBEIbygAAApvJwAAChELby4AAAotld4VEQt1FQAAARMOEQ4sBxEOby8AAArc3gwRCCwH
EQhvLwAACtwCKBAAAAoWbzAAAAreDBEGLAcRBm8vAAAK3N4MEQUsBxEFby8AAArc3lwTDwIoEAAA
Cm8RAAAKcvMAAHBvEgAACm8TAAAKbxQAAApyEwEAcCgbAAAKKDEAAAoTEBEQEQ9vFAAACm8yAAAK
AigQAAAKF28wAAAK3gwRECwHERBvLwAACtzeACoAQZQAAAIAAACOAQAAbwAAAP0BAAAVAAAAAAAA
AAIAAAAuAQAA5gAAABQCAAAMAAAAAAAAAAIAAADkAAAASgEAAC4CAAAMAAAAAAAAAAIAAACoAAAA
lAEAADwCAAAMAAAAAAAAAAIAAAB8AgAAHAAAAJgCAAAMAAAAAAAAAAAAAAAAAAAASgIAAEoCAABc
AAAAFgAAAR4CKDMAAAoqHgIoNAAACiqufgEAAAQtHnIxAQBw0AMAAAIoNQAACm82AAAKczcAAAqA
AQAABH4BAAAEKhp+AgAABCoeAoACAAAEKhp+AwAABCoeAig4AAAKKi5zCAAABoADAAAEKgAAQlNK
QgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAABAUAACN+AABwBQAAmAcAACNTdHJpbmdz
AAAAAAgNAACkAQAAI1VTAKwOAAAQAAAAI0dVSUQAAAC8DgAA9AEAACNCbG9iAAAAAAAAAAIAAAFX
HaIBCQMAAAD6ATMAFgAAAQAAADMAAAAFAAAABgAAAAkAAAABAAAAOAAAAAIAAAAQAAAAAQAAAAIA
AAADAAAABAAAAAEAAAAFAAAAAQAAAAEAAAAAADEEAQAAAAAABgCuAuUFBgA9A+UFBgD6AdIFDwBZ
BgAABgAnAsgEBgCRAsgEBgByAsgEBgAkA8gEBgDOAsgEBgDnAsgEBgA+AsgEBgBZAnQDCgACA+AD
CgBQAeADDgAOBS0HDgCCAC0HDgCdAEQABgCTBRMABgCrBboGDgCBB0QABgCwAGsEBgAcBWsEBgBy
BGsEBgDdAdIFBgALB2sEBgBxBQUGBgA5BbMEEgCnARsEEgAOAhsEEgCHAZ4EBgDCAeUFCgAJBOAD
FgCbBuUAFgCnAOUAFgDRBuUAFgCBBeUADgABBSYFBgC6A2sEDgBRBS0HDgBFBUQABgBrA2oHDgDa
BEQADgBsAUQADgCTBEQABgCgBRMADgDvBEQABgBZB2sEBgDgABMABgAbAWsEBgC8AGsEBgCNB8gE
AAAAAAoAAAAAAAEAAQABABAAiARQADkAAQABAAAAEAAMBmgGZQABAAMAAAEQAKUGaAZ5AAMABwAD
AQAA7QYAAF0ABAAKABEAdwT3ABEAQAH7ABEAjQD/AAYGPAADAVaA3QYGAVaAIAEGAVAgAAAAAIYA
jgQGAAEAmCMAAAAAhhjFBQYAAQCgIwAAAACDGMUFBgABAKgjAAAAAJMIbQUKAQEA1CMAAAAAkwgo
AQ8BAQDbIwAAAACTCDQBFAEBAOMjAAAAAJYIEgcaAQIA6iMAAAAAhhjFBQYAAgDyIwAAAACRGMsF
HwECAAAAAQBlAwkAxQUBABEAxQUGABkAxQUKACkAxQUQADEAxQUQADkAxQUQAEEAxQUQAEkAxQUQ
AFEAxQUQAFkAxQUQAGEAxQUQAGkAxQUGAMEAxQUGAOkAxQUVAPkAxQUGAHEA5QY4AAEBlwY+AAkB
YgREABEBWwNLAMkAuANPAHkAxQUGAAEBzQZTABkBYgRZACEBjgNPACkBowMQACkBgwQGADEBBAdg
AIEAxQVmAIkAxQUGAIEAXwVtAIkAfQBzADEBBAd6AEkBAQCAAJEAxQWGAIkArgaPAFkBTweVAFEB
YgSZAGkBvAGgAGkBvAEQAGkBDwFPAIkA+walAFkBtwWrAJkAQwdLAKEAYgSwAHkBWQS1AJkAYQe6
AKkAnwEGAAEBHgcBAIEBdge+AGkBBQEQAHEAxQUGAMkAxQUGAIkBzgDEAIkBiQfNANEAxQXTAPEA
xQUGAAgAFADtAAgAGADyACkAcwBaAS4ACwAyAS4AEwA7AS4AGwBaAS4AIwBjAS4AKwCMAS4AMwCM
AS4AOwCMAS4AQwBjAS4ASwCSAS4AUwCMAS4AWwCpAUMAYwDyAEkAcwBaAWEAewDyAGMAawDyABsA
AwABAAQAAwAAAHEFIwEAAEgBKAEAABYHLQECAAQAAwACAAUABQABAAYABQACAAcABwAEgAAAAQAA
ALQhd2kAAAAAAABQAAAABAAAAAAAAAAAAAAA2wB0AAAAAAAPAAAAAAAAAAAAAADkAMEDAAAAAAQA
AAAAAAAAAAAAANsARAAAAAAABAAAAAAAAAAAAAAA2wBrBAAAAAAPAAAAAAAAAAAAAADkAB0AAAAA
AAAAAAABAAAAFgYAAAUAAgAAAAAAAGdldF9VVEY4ADxNb2R1bGU+AFN5c3RlbS5JTwBNaWNyb3Nv
ZnQuU3FsU2VydmVyLk1hbmFnZWREVFMAdmFsdWVfXwBTeXN0ZW0uRGF0YQBTVF8xMTQzOTA0NWUw
NDQ0MmYzOGZkMTczNTEwNWNhOGRiYgBtc2NvcmxpYgBMb2FkAFNxbENvbW1hbmQAZGVmYXVsdElu
c3RhbmNlAERhdGFUYWJsZQBWYXJpYWJsZQBJRGlzcG9zYWJsZQBSdW50aW1lVHlwZUhhbmRsZQBH
ZXRUeXBlRnJvbUhhbmRsZQBGaWxlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAV3Jp
dGVMaW5lAGdldF9OZXdMaW5lAFR5cGUARmFpbHVyZQBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBy
ZXNvdXJjZUN1bHR1cmUAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEludGVybmFsRGF0YUNv
bGxlY3Rpb25CYXNlAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAERpc3Bvc2UARWRpdG9yQnJvd3Nh
YmxlU3RhdGUAV3JpdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2Vy
Q29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0
ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdl
dEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1i
bHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFz
c2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2Ny
aXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRp
bWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBFbmNvZGluZwBTeXN0ZW0u
UnVudGltZS5WZXJzaW9uaW5nAGdldF9Db25uZWN0aW9uU3RyaW5nAHNldF9Db25uZWN0aW9uU3Ry
aW5nAFRvU3RyaW5nAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3Fs
U2VydmVyLkR0cy5UYXNrcy5TY3JpcHRUYXNrAFNjcmlwdE9iamVjdE1vZGVsAFN5c3RlbS5Db21w
b25lbnRNb2RlbABTVF8xMTQzOTA0NWUwNDQ0MmYzOGZkMTczNTEwNWNhOGRiYi5kbGwASXNEQk51
bGwAZ2V0X0l0ZW0AU3lzdGVtAEVudW0AcmVzb3VyY2VNYW4AT3BlbgBTY3JpcHRNYWluAERhdGFD
b2x1bW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJl
ZmxlY3Rpb24ARGF0YUNvbHVtbkNvbGxlY3Rpb24ARGF0YVJvd0NvbGxlY3Rpb24ARGJDb25uZWN0
aW9uAFNxbENvbm5lY3Rpb24ARXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5m
bwBJRGF0YVJlYWRlcgBTcWxEYXRhUmVhZGVyAEV4ZWN1dGVSZWFkZXIAZ2V0X1Jlc291cmNlTWFu
YWdlcgBDb25uZWN0aW9uTWFuYWdlcgBTdHJlYW1Xcml0ZXIAVGV4dFdyaXRlcgBJRW51bWVyYXRv
cgBHZXRFbnVtZXJhdG9yAC5jdG9yAC5jY3RvcgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1
bnRpbWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUXzExNDM5MDQ1ZTA0NDQy
ZjM4ZmQxNzM1MTA1Y2E4ZGJiLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dp
bmdNb2RlcwBTVF8xMTQzOTA0NWUwNDQ0MmYzOGZkMTczNTEwNWNhOGRiYi5Qcm9wZXJ0aWVzAGdl
dF9WYXJpYWJsZXMAU2V0dGluZ3MAZ2V0X0NvbHVtbnMAU3lzdGVtLkNvbGxlY3Rpb25zAGdldF9D
b25uZWN0aW9ucwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfUm93cwBDb25jYXQA
T2JqZWN0AGdldF9EZWZhdWx0AHNldF9UYXNrUmVzdWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABn
ZXRfQ3VycmVudABnZXRfQ291bnQAQ29udmVydABNb3ZlTmV4dABTeXN0ZW0uVGV4dABDcmVhdGVU
ZXh0AERhdGFSb3cAZ2V0X0Fzc2VtYmx5AAAAAB1VAHMAZQByADoAOgBGAGkAbABlAE4AYQBtAGUA
AC9VAHMAZQByADoAOgBEAGUAcwB0AGkAbgBhAHQAaQBvAG4ARgBvAGwAZABlAHIAAB9VAHMAZQBy
ADoAOgBUAGEAYgBsAGUATgBhAG0AZQAAJ1UAcwBlAHIAOgA6AEYAaQBsAGUARABlAGwAaQBtAGkA
dABlAHIAACdVAHMAZQByADoAOgBGAGkAbABlAEUAeAB0AGUAbgBzAGkAbwBuAAANRABCAEMAbwBu
AG4AAB1TAGUAbABlAGMAdAAgACoAIABGAHIAbwBtACAAAANcAAADXwAAH1UAcwBlAHIAOgA6AEwA
bwBnAEYAbwBsAGQAZQByAAAdXABFAHIAcgBvAHIATABvAGcAXwAuAGwAbwBnAABxUwBUAF8AMQAx
ADQAMwA5ADAANAA1AGUAMAA0ADQANAAyAGYAMwA4AGYAZAAxADcAMwA1ADEAMAA1AGMAYQA4AGQA
YgBiAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAA3IkriwO150iS
v68MZ+ju6AAEIAEBCAMgAAEFIAEBEREEIAEBDgUgAQERcRwHEQ4ODg4OEj0SQRJFEkkICBJNElEI
ElUSWRJJBSAAEoCBBSAAEoCFBiABEoCJHAMgABwDIAAOBSAAEoCNBiABEoCRHAUAAg4ODgYgAgEO
Ej0FIAASgJ0GIAEBEoChBQABDh0OBQAAEoClCCADAQ4CEoClBSAAEoCpAyAACAYgARKAsQgEIAEB
HAUgABKAuQQgABJNBCABHAgEAAECHAMgAAIFAAESSQ4IAAESgMURgMkFIAASgM0HIAIBDhKAzQi3
elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBhJpAwYSbQMGEhACBggDBhEUBAAAEmkEAAASbQUA
AQESbQQAABIQAwAAAQQIABJpBAgAEm0ECAASEAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2Vw
dGlvblRocm93cwEIAQACAAAAAAAoAQAjU1RfMTE0MzkwNDVlMDQ0NDJmMzhmZDE3MzUxMDVjYThk
YmIAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAyMwAASQEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC43AQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRIuTkVUIEZyYW1ld29yayA0LjcAtAAAAM7K
774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVy
c2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkz
NGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQ
QURQtAAAAJA1AAAAAAAAAAAAAKo1AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAACcNQAAAAAAAAAA
AAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAABoEAAAAAAAAAAAAABoENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQB3abQhAAABAHdptCE/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsAR6AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABWAwAAAQAwADAAMAAw
ADAANABiADAAAAAaAAEAAQBDAG8AbQBtAGUAbgB0AHMAAAAAAAAAIgABAAEAQwBvAG0AcABhAG4A
eQBOAGEAbQBlAAAAAAAAAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAA
AFMAVABfADEAMQA0ADMAOQAwADQANQBlADAANAA0ADQAMgBmADMAOABmAGQAMQA3ADMANQAxADAA
NQBjAGEAOABkAGIAYgAAAD4ADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAAAAAAMQAuADAALgA4
ADYAMgA4AC4AMgA2ADkAOQA5AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwATgBhAG0AZQAAAFMA
VABfADEAMQA0ADMAOQAwADQANQBlADAANAA0ADQAMgBmADMAOABmAGQAMQA3ADMANQAxADAANQBj
AGEAOABkAGIAYgAuAGQAbABsAAAASAASAAEATABlAGcAYQBsAEMAbwBwAHkAcgBpAGcAaAB0AAAA
QwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMgAzAAAAKgABAAEATABlAGcAYQBsAFQAcgBh
AGQAZQBtAGEAcgBrAHMAAAAAAAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwARgBpAGwAZQBuAGEA
bQBlAAAAUwBUAF8AMQAxADQAMwA5ADAANAA1AGUAMAA0ADQANAAyAGYAMwA4AGYAZAAxADcAMwA1
ADEAMAA1AGMAYQA4AGQAYgBiAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUAYwB0AE4AYQBtAGUA
AAAAAFMAVABfADEAMQA0ADMAOQAwADQANQBlADAANAA0ADQAMgBmADMAOABmAGQAMQA3ADMANQAx
ADAANQBjAGEAOABkAGIAYgAAAEIADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBpAG8AbgAAADEA
LgAwAC4AOAA2ADIAOAAuADIANgA5ADkAOQAAAAAARgAPAAEAQQBzAHMAZQBtAGIAbAB5ACAAVgBl
AHIAcwBpAG8AbgAAADEALgAwAC4AOAA2ADIAOAAuADIANgA5ADkAOQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAAC8NQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="110,42"
          Id="Package\csv ok"
          TopLeft="357,69" />
        <NodeLayout
          Size="170,42"
          Id="Package\access Bigint error"
          TopLeft="545,77" />
        <NodeLayout
          Size="113,42"
          Id="Package\access 1 1"
          TopLeft="448,152" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>