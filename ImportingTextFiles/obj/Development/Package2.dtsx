<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/10/2023 7:16:59 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-D1T6CSI"
  DTS:CreatorName="DESKTOP-D1T6CSI\98912"
  DTS:DTSID="{43700CF0-0974-44D4-837E-D1741E12980B}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5131.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Package2"
  DTS:PackageType="5"
  DTS:VersionBuild="10"
  DTS:VersionGUID="{23DFCA08-708E-4A16-9377-F9461D88C2EC}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{6CB76882-AC3D-44E3-BC2C-354B2FF986A6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName1">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\98912\Desktop\SalaryWages140203\wages0203\0203\stmdn203.txt</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{DF4CA8BA-A029-4968-80C9-6E2126EDB27C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FileName2">
      <DTS:VariableValue
        DTS:DataType="8">C:\Users\98912\Desktop\SalaryWages140203\wages0203\0203\stmdj203.txt</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Script Task"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{86BAF111-5907-42BF-970C-D947332B504A}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Script Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_cc3d41e2ffe546ac8874e5ee27b3a952"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::FileName1,User::FileName2">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.IO;
using System.Text;

namespace ST_cc3d41e2ffe546ac8874e5ee27b3a952
{
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        public enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        }

        string[] UCODE = new string[400];

        public void Main()
        {
            try
            {
                UCODE[32] = " ";
                UCODE[33] = "Ø®";

                string connstring = @"Data Source=.;Initial Catalog=SSIS;Integrated Security=True;";

                // Get the file paths from package parameters
                string[] filenames = {
                    Dts.Variables["User::FileName1"].Value.ToString(),
                    Dts.Variables["User::FileName2"].Value.ToString()
                };

                using (SqlConnection con = new SqlConnection(connstring))
                {
                    con.Open();

                    DataTable dt = new DataTable();
                    dt.Columns.AddRange(new DataColumn[9] {
                        new DataColumn("regno", typeof(string)),
                        new DataColumn("year", typeof(string)),
                        new DataColumn("pnd", typeof(string)),
                        new DataColumn("debit", typeof(long)),
                        new DataColumn("credit", typeof(long)),
                        new DataColumn("sharh", typeof(string)),
                        new DataColumn("tadil", typeof(string)),
                        new DataColumn("sn", typeof(string)),
                        new DataColumn("compcode", typeof(string))
                    });

                    foreach (string filename in filenames)
                    {
                        string csvPath_wages = filename;
                        using (FileStream fs = new FileStream(csvPath_wages, FileMode.Open, FileAccess.Read))
                        using (BufferedStream bs = new BufferedStream(fs))
                        using (StreamReader sr = new StreamReader(bs, Encoding.Default))
                        {
                            string str = sr.ReadLine();
                            while (str != null && str.Length > 1)
                            {
                                string[] celllist = str.Split('}');

                                DataRow row = dt.NewRow();
                                row[0] = celllist[0].Trim();
                                row[1] = celllist[1].Trim();
                                row[2] = celllist[3].Trim();
                                row[5] = ConvertText(celllist[5], true, false).Trim();
                                row[6] = Reverse(ConvertText(celllist[4], true, false)).Trim();
                                row[7] = celllist[9].Trim();
                                row[8] = celllist[2].Trim();

                                string pp = celllist[8].Trim();
                                string type = pp.Trim();
                                if (type == "1")
                                {
                                    pp = celllist[7].Trim();
                                    row[4] = long.Parse(pp);
                                    row[3] = 0;
                                }
                                else
                                {
                                    pp = celllist[6].Trim();
                                    row[3] = long.Parse(pp);
                                    row[4] = 0;
                                }

                                dt.Rows.Add(row);

                                if (dt.Rows.Count == 1000)
                                {
                                    using (SqlBulkCopy sqlBulkCopy = new SqlBulkCopy(con))
                                    {
                                        sqlBulkCopy.DestinationTableName = "[KI].[Statement_Wages00]";
                                        sqlBulkCopy.WriteToServer(dt);
                                    }
                                    dt.Rows.Clear();
                                }

                                str = sr.ReadLine();
                            }

                            if (dt.Rows.Count > 0)
                            {
                                using (SqlBulkCopy sqlBulkCopy = new SqlBulkCopy(con))
                                {
                                    sqlBulkCopy.DestinationTableName = "[KI].[Statement_Wages00]";
                                    sqlBulkCopy.WriteToServer(dt);
                                }
                                dt.Rows.Clear();
                            }
                        }
                    }

                    con.Close();
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                MessageBox.Show("Error: " + ex.Message);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        public string ConvertText(string str, bool IsFile, bool IsComment)
        {
            try
            {
                string ConvertedStr = "";
                int index = 0;
                byte[] AcsiiCode = Encoding.Default.GetBytes(str);

                foreach (byte bt in AcsiiCode)
                {
                    index = Convert.ToInt32(bt);

                    if (!IsComment)
                    {
                        if (IsFile && (index == 45))
                            ConvertedStr = "Ø¨" + ConvertedStr;
                        else
                            ConvertedStr = UCODE[index] + ConvertedStr;
                    }
                    else
                        ConvertedStr = ConvertedStr + UCODE[index];
                }

                return ConvertedStr;
            }
            catch (Exception ex)
            {
                return null;
            }
        }

        public static string Reverse(string s)
        {
            char[] charArray = s.ToCharArray();
            Array.Reverse(charArray);
            return new string(charArray);
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_cc3d41e2ffe546ac8874e5ee27b3a952.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{EFB01298-5B37-4910-8383-96420855A186}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_cc3d41e2ffe546ac8874e5ee27b3a952</RootNamespace>
    <AssemblyName>ST_cc3d41e2ffe546ac8874e5ee27b3a952</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_cc3d41e2ffe546ac8874e5ee27b3a952</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_cc3d41e2ffe546ac8874e5ee27b3a952</msb:DisplayName>
    <msb:ProjectId>{7D89E0A6-7A74-4F0F-8FD5-F2EC90EB606E}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_cc3d41e2ffe546ac8874e5ee27b3a952.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_cc3d41e2ffe546ac8874e5ee27b3a952.Properties.Settings.get_Default():ST_cc3d41e2ffe546ac8874e5ee27b3a952.Properties.Sett" +
    "ings")]

namespace ST_cc3d41e2ffe546ac8874e5ee27b3a952.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_cc3d41e2ffe546ac8874e5ee27b3a952")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_cc3d41e2ffe546ac8874e5ee27b3a952")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_cc3d41e2ffe546ac8874e5ee27b3a952.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_cc3d41e2ffe546ac8874e5ee27b3a952.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_cc3d41e2ffe546ac8874e5ee27b3a952.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_cc3d41e2ffe546ac8874e5ee27b3a952.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_cc3d41e2ffe546ac8874e5ee27b3a952.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_cc3d41e2ffe546ac8874e5ee27b3a952.dll">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
AAAAAIYAxwQGAAEAACUAAAAAhgCGB0MBAQCQJQAAAACWAN4BSgEEAKMlAAAAAIYYwwUGAAUAuyUA
AAAAgxjDBQYABQDDJQAAAACTCKEFTwEFAO8lAAAAAJMIUwFUAQUA9iUAAAAAkwhfAVkBBQD+JQAA
AACWCCAHXwEGAAUmAAAAAIYYwwUGAAYADSYAAAAAkRjJBWQBBgAAAAEA0AUAAAIA/QAAAAMAXgcA
AAEACgcAAAEAngMJAMMFAQARAMMFBgAZAMMFCgApAMMFEAAxAMMFEAA5AMMFEABBAMMFEABJAMMF
EABRAMMFEABZAMMFEABhAMMFEABpAMMFBgDBAMMFBgDpAMMFFQD5AMMFBgBxAO0GOgAJAZkGQAAR
AY0ERgAZAZQDTQDJAMcDUQB5AMMFEAAhAbwEBgCBAMMFBgCBAM4GVQA5AesAWwAxAcMFZAApAbEA
bACJAMMFdACRAMMFfwBpASAHhgCZAMMFjABxAT0BUQABARoHlgCBAJoHnQABAaYEUQChAJYEogAB
AdYHqABJAdgBrgCBAAMHswCJAYgAuQCRAWgHvwCpAMMFwwCpAAQBEACpALUFyQCZAdABBgCJAX4F
BgABAdADvwAhAcoBBgAJATkHAQCxAKUAUQABAQwHzwChAaEH1QBpAacG5QCxAQEA6wABAbEH8AC5
Ad4B9QABAcMF/ABxAMMFBgDJAMMFBgA5Ab0HAgHRAMMFCAHxAMMFBgAIABgAIgEIABwAJwEpAHMA
nwEuAAsAdwEuABMAgAEuABsAnwEuACMAqAEuACsA0QEuADMA0QEuADsA0QEuAEMAqAEuAEsA1wEu
AFMA0QEuAFsA7gFDAGMAJwFJAHMAnwFjAGsAJwGBAHsAJwEbANwAAwABAAQAAwAAAKUFaAEAAHMB
bQEAACQHcgECAAYAAwACAAcABQABAAgABQACAAkABwAEgAAAAQAAAI8h3TgAAAAAAAAJAAAABAAA
AAAAAAAAAAAAEAF/AAAAAAAPAAAAAAAAAAAAAAAZAdsDAAAAAAQAAAAAAAAAAAAAABABcwAAAAAA
BAAAAAAAAAAAAAAAEAGfBAAAAAAPAAAAAAAAAAAAAAAZAUwAAAAAAAQAAAAAAAAAAAAAABABuQYA
AAAAAAAAAAEAAAAYBgAABQACAAAAAFRvSW50MzIAU1RfY2MzZDQxZTJmZmU1NDZhYzg4NzRlNWVl
MjdiM2E5NTIASW50NjQAPE1vZHVsZT4AVUNPREUAU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuTWFuYWdlZERUUwB2YWx1ZV9fAFN5c3RlbS5EYXRhAG1zY29ybGliAEFkZABkZWZhdWx0SW5z
dGFuY2UARmlsZU1vZGUAZ2V0X01lc3NhZ2UAQWRkUmFuZ2UARGF0YVRhYmxlAFZhcmlhYmxlAElE
aXNwb3NhYmxlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElzRmlsZQBzZXRf
RGVzdGluYXRpb25UYWJsZU5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBSZWFk
TGluZQBUeXBlAEZhaWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJl
AFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBB
cHBsaWNhdGlvblNldHRpbmdzQmFzZQBDbG9zZQBEaXNwb3NlAFBhcnNlAFJldmVyc2UARWRpdG9y
QnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2Vy
Q29kZUF0dHJpYnV0ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0
ZQBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdl
dEZyYW1ld29ya0F0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1i
bHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFz
c2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2Ny
aXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRp
bWVDb21wYXRpYmlsaXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBFbmNvZGluZwBTeXN0ZW0u
UnVudGltZS5WZXJzaW9uaW5nAFRvU3RyaW5nAGdldF9MZW5ndGgATWljcm9zb2Z0LlNxbFNlcnZl
ci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2Ny
aXB0T2JqZWN0TW9kZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2NjM2Q0MWUyZmZlNTQ2YWM4
ODc0ZTVlZTI3YjNhOTUyLmRsbABCdWZmZXJlZFN0cmVhbQBGaWxlU3RyZWFtAGdldF9JdGVtAHNl
dF9JdGVtAFN5c3RlbQBUcmltAEVudW0AcmVzb3VyY2VNYW4AT3BlbgBTY3JpcHRNYWluAERhdGFD
b2x1bW4AU3lzdGVtLkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJl
ZmxlY3Rpb24ARGF0YUNvbHVtbkNvbGxlY3Rpb24ARGF0YVJvd0NvbGxlY3Rpb24ARGJDb25uZWN0
aW9uAFNxbENvbm5lY3Rpb24ARXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5m
bwBDbGVhcgBDaGFyAFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIA
V3JpdGVUb1NlcnZlcgAuY3RvcgAuY2N0b3IAc3RyAFN5c3RlbS5EaWFnbm9zdGljcwBTeXN0ZW0u
UnVudGltZS5Db21waWxlclNlcnZpY2VzAFN5c3RlbS5SZXNvdXJjZXMAU1RfY2MzZDQxZTJmZmU1
NDZhYzg4NzRlNWVlMjdiM2E5NTIuUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAERlYnVn
Z2luZ01vZGVzAFNUX2NjM2Q0MWUyZmZlNTQ2YWM4ODc0ZTVlZTI3YjNhOTUyLlByb3BlcnRpZXMA
Z2V0X1ZhcmlhYmxlcwBHZXRCeXRlcwBTZXR0aW5ncwBTeXN0ZW0uV2luZG93cy5Gb3JtcwBnZXRf
Q29sdW1ucwBGaWxlQWNjZXNzAFN1Y2Nlc3MAZ2V0X0R0cwBTY3JpcHRSZXN1bHRzAGdldF9Sb3dz
AENvbmNhdABPYmplY3QAU3BsaXQAZ2V0X0RlZmF1bHQARGlhbG9nUmVzdWx0AHNldF9UYXNrUmVz
dWx0AFN5c3RlbS5EYXRhLlNxbENsaWVudABJc0NvbW1lbnQAZ2V0X0NvdW50AENvbnZlcnQAU3lz
dGVtLlRleHQAQ29udmVydFRleHQARGF0YVJvdwBOZXdSb3cAU2hvdwBNZXNzYWdlQm94AFRvQ2hh
ckFycmF5AGdldF9Bc3NlbWJseQBTcWxCdWxrQ29weQBvcF9FcXVhbGl0eQAAAAADIAAAAy4GAXlE
AGEAdABhACAAUwBvAHUAcgBjAGUAPQAuADsASQBuAGkAdABpAGEAbAAgAEMAYQB0AGEAbABvAGcA
PQBTAFMASQBTADsASQBuAHQAZQBnAHIAYQB0AGUAZAAgAFMAZQBjAHUAcgBpAHQAeQA9AFQAcgB1
AGUAOwAAH1UAcwBlAHIAOgA6AEYAaQBsAGUATgBhAG0AZQAxAAAfVQBzAGUAcgA6ADoARgBpAGwA
ZQBOAGEAbQBlADIAAAtyAGUAZwBuAG8AAAl5AGUAYQByAAAHcABuAGQAAAtkAGUAYgBpAHQAAA1j
AHIAZQBkAGkAdAAAC3MAaABhAHIAaAAAC3QAYQBkAGkAbAAABXMAbgAAEWMAbwBtAHAAYwBvAGQA
ZQAAAzEAADFbAEsASQBdAC4AWwBTAHQAYQB0AGUAbQBlAG4AdABfAFcAYQBnAGUAcwAwADAAXQAA
D0UAcgByAG8AcgA6ACAAAAEAAygGAXFTAFQAXwBjAGMAMwBkADQAMQBlADIAZgBmAGUANQA0ADYA
YQBjADgAOAA3ADQAZQA1AGUAZQAyADcAYgAzAGEAOQA1ADIALgBQAHIAbwBwAGUAcgB0AGkAZQBz
AC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAGfb9Ih/mD1KvuN1US/xj8EABCABAQgDIAABBSABARER
BCABAQ4FIAEBEXEeBxAOHQ4SPRJBHQ4IEkUSSRJNDh0OElEOElUSVRJZBSAAEoCFBSAAEoCJBiAB
EoCNHAMgABwDIAAOBSAAEoCVCAABEoCdEYChByACAQ4SgJ0HIAEBHRKAmQogAwEOEYCpEYCtBiAB
ARKAsQUAABKAtQkgAgESgLESgLUGIAEdDh0DBCAAElEFIAIBCBwFAAICDg4EAAEKDgUgABKAxQUg
AQESUQMgAAgFIAEBEj0FIAEBEkEFAAIODg4GAAERgNUOCAcFDggdBQgOBSABHQUOBAABCAUEIAAd
AwYAAQESgN0FIAEBHQMFIAASgOEHIAIBDhKA4Qi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAAD
Bh0OAwYSaQMGEm0DBhIQAgYIAwYRFAYgAw4OAgIEAAEODgQAABJpBAAAEm0FAAEBEm0EAAASEAMA
AAEECAASaQQIABJtBAgAEhAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB
CAEAAgAAAAAAKAEAI1NUX2NjM2Q0MWUyZmZlNTQ2YWM4ODc0ZTVlZTI3YjNhOTUyAAAFAQAAAAAW
AQARQ29weXJpZ2h0IEAgIDIwMjMAAEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4U
RnJhbWV3b3JrRGlzcGxheU5hbWUSLk5FVCBGcmFtZXdvcmsgNC43tAAAAM7K774BAAAAkQAAAGxT
eXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4w
LCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVt
LlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAABQ5AAAA
AAAAAAAAAC45AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgOQAAAAAAAAAAAAAAAF9Db3JEbGxN
YWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AQAQAAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAA
AFhAAAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAA
vQTv/gAAAQAAAAEA3TiPIQAAAQDdOI8hPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAAB
AFYAYQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAA
AAAAALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAw
ADQAYgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkA
TgBhAG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABT
AFQAXwBjAGMAMwBkADQAMQBlADIAZgBmAGUANQA0ADYAYQBjADgAOAA3ADQAZQA1AGUAZQAyADcA
YgAzAGEAOQA1ADIAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AOAA1
ADkAMQAuADEANAA1ADUANwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQA
XwBjAGMAMwBkADQAMQBlADIAZgBmAGUANQA0ADYAYQBjADgAOAA3ADQAZQA1AGUAZQAyADcAYgAz
AGEAOQA1ADIALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMA
bwBwAHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBk
AGUAbQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0A
ZQAAAFMAVABfAGMAYwAzAGQANAAxAGUAMgBmAGYAZQA1ADQANgBhAGMAOAA4ADcANABlADUAZQBl
ADIANwBiADMAYQA5ADUAMgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAA
AABTAFQAXwBjAGMAMwBkADQAMQBlADIAZgBmAGUANQA0ADYAYQBjADgAOAA3ADQAZQA1AGUAZQAy
ADcAYgAzAGEAOQA1ADIAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4A
MAAuADgANQA5ADEALgAxADQANQA1ADcAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQBy
AHMAaQBvAG4AAAAxAC4AMAAuADgANQA5ADEALgAxADQANQA1ADcAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAQDkAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="134,42"
          Id="Package\Script Task"
          TopLeft="391,54" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>