<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="7/10/2023 7:16:59 AM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="DESKTOP-D1T6CSI"
  DTS:CreatorName="DESKTOP-D1T6CSI\98912"
  DTS:DTSID="{C5E81799-04F7-4DFF-A2DA-35DE36159AF6}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="16.0.5131.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="ImportWages"
  DTS:PackageType="5"
  DTS:VersionBuild="37"
  DTS:VersionGUID="{62EFAF47-73E4-47DC-903A-04F84E6BD715}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{15213DEF-3D7E-401D-AF2A-1D186A9C4FDA}"
      DTS:ObjectName="Month">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">140204</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1CB2B37E-16A3-41FD-9221-7B8E41A85DA6}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="conn">
      <DTS:VariableValue
        DTS:DataType="8">Data Source=.;Initial Catalog=SSIS;Integrated Security=True</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{23998D2F-6573-47FE-8747-72590DBA963E}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;E:\\all140204\\&quot;+ @[$Package::Month] +&quot;Wages\\stmdj&quot;+ RIGHT( @[$Package::Month] ,3 ) +&quot;.txt&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="WagesFileName1">
      <DTS:VariableValue
        DTS:DataType="8">E:\all140204\140204Wages\stmdj204.txt</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{271DEA76-25CF-427F-BEAD-D55963845DB8}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;E:\\all140204\\&quot;+ @[$Package::Month] +&quot;Wages\\stmdn&quot;+ RIGHT( @[$Package::Month] ,3 ) +&quot;.txt&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="WagesFileName2">
      <DTS:VariableValue
        DTS:DataType="8">E:\all140204\140204Wages\stmdn204.txt</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{C2476DCE-A514-4576-9A72-540A381DAC1C}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{1999F4C4-6C70-4967-8D7C-3237A0036E76}"
          SQLTask:SqlStatementSource="DECLARE @Month VARCHAR(30) = ?;&#xA;DECLARE @SchemaName NVARCHAR(50) = 'KI'; -- Specify your schema name here&#xA;DECLARE @WagesTable NVARCHAR(100) = QUOTENAME(@SchemaName) + N'.Statement_Wages_' + @Month;&#xA;DECLARE @SqlStatementCreateTable NVARCHAR(MAX) = N'&#xA;CREATE TABLE ' + @WagesTable + N' (&#xA;    [regno] [nvarchar](7) NULL,&#xA;    [year] [nvarchar](4) NULL,&#xA;    [pnd] [nvarchar](4) NULL,&#xA;    [debit] [bigint] NULL,&#xA;    [credit] [bigint] NULL,&#xA;    [sharh] [nvarchar](200) NULL,&#xA;    [tadil] [nvarchar](5) NULL,&#xA;    [sn] [nvarchar](2) NULL,&#xA;    [payrollCode] [nvarchar](5) NULL&#xA;);&#xA;';&#xA;&#xA;EXEC sp_executesql @SqlStatementCreateTable;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="$Package::Month"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute SQL Task 1"
      DTS:CreationName="Microsoft.ExecuteSQLTask"
      DTS:Description="Execute SQL Task"
      DTS:DTSID="{FE0349B5-7284-4E6B-A058-88C2A56ED056}"
      DTS:ExecutableType="Microsoft.ExecuteSQLTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute SQL Task 1"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <SQLTask:SqlTaskData
          SQLTask:Connection="{758317D3-F15C-45B1-8D2E-078B91843567}"
          SQLTask:SqlStatementSource="DECLARE @Month VARCHAR(30) = ?;&#xA;DECLARE @SchemaName NVARCHAR(50) = 'KI'; -- Specify your schema name here&#xA;DECLARE @WagesTable NVARCHAR(100) = QUOTENAME(@SchemaName) + N'.Statement_Wages_' + @Month;&#xA;DECLARE @SqlStatementAddIndex NVARCHAR(MAX) = N'&#xA;CREATE INDEX IDX_RegNo ON ' + @WagesTable + N' (regno);&#xA;';&#xA;&#xA;EXEC sp_executesql @SqlStatementAddIndex;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
          <SQLTask:ParameterBinding
            SQLTask:ParameterName="0"
            SQLTask:DtsVariableName="$Package::Month"
            SQLTask:ParameterDirection="Input"
            SQLTask:DataType="129"
            SQLTask:ParameterSize="-1" />
        </SQLTask:SqlTaskData>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\ImportingWages"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{12BF5DF6-33B8-4A98-ACD9-04CC8814BFEB}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="ImportingWages"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_cc3d41e2ffe546ac8874e5ee27b3a952"
          VSTAMajorVersion="15"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadOnlyVariables="User::WagesFileName1,User::WagesFileName2,$Package::Month"
          ReadWriteVariables="User::conn">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Data.SqlClient;
using System.IO;
using System.Text;

namespace ST_cc3d41e2ffe546ac8874e5ee27b3a952
{
    [Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
    public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
    {
        public enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        }

        string[] UCODE = new string[400];
        string RetStr;
        public void Main()
        {
            try
            {
                RetStr = "";
                UCODE[0] = "١";
                UCODE[32] = " ";
                UCODE[33] = "خ";
                UCODE[33] = "غ";
                UCODE[34] = "ئ";
                UCODE[35] = "د";
                UCODE[36] = "ژ";
                UCODE[36] = "ث";
                UCODE[37] = "ح";
                UCODE[38] = "*";
                UCODE[39] = "ر";
                UCODE[40] = "ب";
                UCODE[41] = "ج";
                UCODE[42] = "ج ";
                UCODE[43] = "پ";
                UCODE[44] = "ح ";
                UCODE[45] = "-";
                UCODE[46] = "ا";
                UCODE[47] = " ";
                UCODE[58] = " ";
                UCODE[59] = "چ";
                UCODE[60] = "ا";
                UCODE[61] = "ز";
                UCODE[62] = "خ ";
                UCODE[63] = "خ";
                UCODE[64] = "ذ";
                UCODE[65] = "س";
                UCODE[66] = "ش";
                UCODE[67] = "ص";
                UCODE[68] = "ض";
                UCODE[69] = "ط";
                UCODE[70] = "ظ";
                UCODE[71] = "ع ";
                UCODE[72] = "ع";
                UCODE[73] = "غ ";
                UCODE[74] = "ف";
                UCODE[75] = "ق ";
                UCODE[76] = "ق";
                UCODE[77] = "ك";
                UCODE[78] = "گ";
                UCODE[79] = "ل ";
                UCODE[80] = "ل";
                UCODE[81] = "لا";
                UCODE[82] = "م";
                UCODE[83] = "ن ";
                UCODE[84] = "ن";
                UCODE[85] = "و";
                UCODE[86] = "ه ";
                UCODE[87] = "ه";
                UCODE[88] = "ي";
                UCODE[89] = "ي ";
                UCODE[90] = "/";
                UCODE[124] = "ت";
                UCODE[163] = "ث";
                UCODE[94] = "چ";
                //'UCODE[171] = "چ";
                UCODE[95] = "م ";
                UCODE[48] = "٠";
                UCODE[49] = "١";
                UCODE[50] = "٢";
                UCODE[51] = "٣";
                UCODE[52] = "٤";
                UCODE[53] = "٥";
                UCODE[54] = "٦";
                UCODE[55] = "٧";
                UCODE[56] = "٨";
                UCODE[57] = "٩";
                //UCODE[241] = "ژ"
                //'A(241) = "ژ"
                UCODE[26] = "ژ";
                UCODE[242] = "ژ";
                UCODE[155] = "ژ";
                UCODE[225] = "ل";
                UCODE[179] = "";
                UCODE[162] = "ژ";
                UCODE[172] = "چ";

                string connstring = Dts.Variables["User::conn"].Value.ToString();
                string Month = Dts.Variables["$Package::Month"].Value.ToString();
                
                string[] filenames = {
                    Dts.Variables["User::WagesFileName1"].Value.ToString(),
                    Dts.Variables["User::WagesFileName2"].Value.ToString()
                };

                using (SqlConnection con = new SqlConnection(connstring))
                {
                    con.Open();

                    DataTable dt = new DataTable();
                    dt.Columns.AddRange(new DataColumn[9] {
                        new DataColumn("regno", typeof(string)),
                        new DataColumn("year", typeof(string)),
                        new DataColumn("pnd", typeof(string)),
                        new DataColumn("debit", typeof(long)),
                        new DataColumn("credit", typeof(long)),
                        new DataColumn("sharh", typeof(string)),
                        new DataColumn("tadil", typeof(string)),
                        new DataColumn("sn", typeof(string)),
                        new DataColumn("compcode", typeof(string))
                    });

                    foreach (string filename in filenames)
                    {
                        string csvPath_wages = filename;
                        using (FileStream fs = new FileStream(csvPath_wages, FileMode.Open, FileAccess.Read))
                        using (BufferedStream bs = new BufferedStream(fs))
                        using (StreamReader sr = new StreamReader(bs, Encoding.Default))
                        {
                            string str = sr.ReadLine();
                            while (str != null && str.Length > 1)
                            {
                                string[] celllist = str.Split('}');

                                DataRow row = dt.NewRow();
                                row[0] = celllist[0].Trim();
                                row[1] = celllist[1].Trim();
                                row[2] = celllist[3].Trim();
                                row[5] = ConvertText(celllist[5], true, false).Trim();
                                row[6] = Reverse(ConvertText(celllist[4], true, false)).Trim();
                                row[7] = celllist[9].Trim();
                                row[8] = celllist[2].Trim();

                                string pp = celllist[8].Trim();
                                string type = pp.Trim();
                                if (type == "1")
                                {
                                    pp = celllist[7].Trim();
                                    row[4] = long.Parse(pp);
                                    row[3] = 0;
                                }
                                else
                                {
                                    pp = celllist[6].Trim();
                                    row[3] = long.Parse(pp);
                                    row[4] = 0;
                                }

                                dt.Rows.Add(row);

                                if (dt.Rows.Count == 1000)
                                {
                                    using (SqlBulkCopy sqlBulkCopy = new SqlBulkCopy(con))
                                    {
                                        sqlBulkCopy.DestinationTableName = "[KI].[Statement_Wages_"+Month+"]";
                                        sqlBulkCopy.WriteToServer(dt);
                                    }
                                    dt.Rows.Clear();
                                }

                                str = sr.ReadLine();
                            }

                            if (dt.Rows.Count > 0)
                            {
                                using (SqlBulkCopy sqlBulkCopy = new SqlBulkCopy(con))
                                {
                                    sqlBulkCopy.DestinationTableName = "[KI].[Statement_Wages_" + Month + "]";
                                    sqlBulkCopy.WriteToServer(dt);
                                }
                                dt.Rows.Clear();
                            }
                        }
                    }

                    con.Close();
                }

                Dts.TaskResult = (int)ScriptResults.Success;
            }
            catch (Exception ex)
            {
                MessageBox.Show("Error: " + ex.Message);
                Dts.TaskResult = (int)ScriptResults.Failure;
            }
        }

        public string ConvertText(string str, bool IsFile, bool IsComment)
        {
            try
            {
                string ConvertedStr = "";
                int index = 0;
                byte[] AcsiiCode = Encoding.Default.GetBytes(str);

                foreach (byte bt in AcsiiCode)
                {
                    index = Convert.ToInt32(bt);

                    if (!IsComment)
                    {
                        if (IsFile && (index == 45))
                            ConvertedStr = "ب" + ConvertedStr;
                        else
                            ConvertedStr = UCODE[index] + ConvertedStr;
                    }
                    else
                        ConvertedStr = ConvertedStr + UCODE[index];
                }

                return ConvertedStr;
            }
            catch (Exception ex)
            {
                return null;
            }
        }

        public static string Reverse(string s)
        {
            char[] charArray = s.ToCharArray();
            Array.Reverse(charArray);
            return new string(charArray);
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="ST_cc3d41e2ffe546ac8874e5ee27b3a952.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{EFB01298-5B37-4910-8383-96420855A186}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_cc3d41e2ffe546ac8874e5ee27b3a952</RootNamespace>
    <AssemblyName>ST_cc3d41e2ffe546ac8874e5ee27b3a952</AssemblyName>
    <TargetFrameworkVersion>v4.7</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=15.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST150</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
  <msb:PropertyGroup>
    <msb:CodeName>ST_cc3d41e2ffe546ac8874e5ee27b3a952</msb:CodeName>
    <msb:Language>msBuild</msb:Language>
    <msb:DisplayName>ST_cc3d41e2ffe546ac8874e5ee27b3a952</msb:DisplayName>
    <msb:ProjectId>{4C5A0DE8-9230-4EB2-92AD-D34F3637629A}</msb:ProjectId>
  </msb:PropertyGroup>
  <msb:ItemGroup>
    <msb:Project Include="ST_cc3d41e2ffe546ac8874e5ee27b3a952.csproj" />
    <msb:File Include="Properties\Settings.settings" />
    <msb:File Include="Properties\AssemblyInfo.cs" />
    <msb:File Include="Properties\Resources.resx" />
    <msb:File Include="Properties\Resources.Designer.cs" />
    <msb:File Include="Properties\Settings.Designer.cs" />
    <msb:File Include="ScriptMain.cs" />
  </msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_cc3d41e2ffe546ac8874e5ee27b3a952.Properties.Settings.get_Default():ST_cc3d41e2ffe546ac8874e5ee27b3a952.Properties.Sett" +
    "ings")]

namespace ST_cc3d41e2ffe546ac8874e5ee27b3a952.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_cc3d41e2ffe546ac8874e5ee27b3a952")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("ST_cc3d41e2ffe546ac8874e5ee27b3a952")]
[assembly: AssemblyCopyright("Copyright @  2023")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_cc3d41e2ffe546ac8874e5ee27b3a952.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_cc3d41e2ffe546ac8874e5ee27b3a952.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_cc3d41e2ffe546ac8874e5ee27b3a952.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_cc3d41e2ffe546ac8874e5ee27b3a952.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_cc3d41e2ffe546ac8874e5ee27b3a952.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_cc3d41e2ffe546ac8874e5ee27b3a952.dll">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
BgCcAEIABgDhBkIABgCGBEIABgCkA4EHBgCWBUIABgCEBZ8EBgADAJ8EDgAoBXMADgCXAXMABgDN
AJ8EGgCtB8AGGgAzB8AGBgB5B58EBgC+B58EBgDIBwEFAAAAADMAAAAAAAEAAQABABAAwQQJADkA
AQABAAAAEAAVBnEGZQADAAUAAAEQALcGcQZ5AAUACQACAQAA/AYAAF0ABgAMAAEAPAA0AQEA0AU4
AREAsAQ7AREAawE/AREAjABDAQYGawBHAVaA7AZKAVaASwFKAVAgAAAAAIYAxwQGAAEAXCkAAAAA
hgCNB04BAQDsKQAAAACWAN4BVQEEAP8pAAAAAIYYwwUGAAUAFyoAAAAAgxjDBQYABQAfKgAAAACT
CKEFWgEFAEsqAAAAAJMIUwFfAQUAUioAAAAAkwhfAWQBBQBaKgAAAACWCCcHagEGAGEqAAAAAIYY
wwUGAAYAaSoAAAAAkRjJBW8BBgAAAAEA1wUAAAIA/QAAAAMAZQcAAAEAEQcAAAEAngMJAMMFAQAR
AMMFBgAZAMMFCgApAMMFEAAxAMMFEAA5AMMFEABBAMMFEABJAMMFEABRAMMFEABZAMMFEABhAMMF
EABpAMMFBgDBAMMFBgDpAMMFFQD5AMMFBgBxAPQGOwABAaAGQQAJAY0ERwARAZQDTgDJAMcDUgB5
AMMFEAAhAbwEBgCBAMMFBgCBANUGVgA5AesAXAAxAcMFZQApAbEAbQCJAMMFdQCRAMMFgABpAScH
hwCZAMMFjQBxAT0BUgAZASEHlwCBAKEHngAZAaYEUgChAJYEowAZAd0HqQBJAdgBrwCBAAoHtACJ
AYgAugCRAW8HwACpAMMFxAAZARMHygCpAAQBEACpALUF0QCZAdABBgCJAX4FBgAZAdADwAAhAcoB
BgABAUAHAQCxAKUAUgAZARMH1wChAagH3QBpAa4G7QCxAQEA8wAZAbgH+AC5Ad4B/QAZAcMFBAFx
AMMFBgDJAMMFBgA5AcQHCgHRAMMFEAHxAMMFBgAIABwAKgEIACAALwEpAHMAqgEuAAsAggEuABMA
iwEuABsAqgEuACMAswEuACsA3AEuADMA3AEuADsA3AEuAEMAswEuAEsA4gEuAFMA3AEuAFsA+QFD
AGMALwFJAHMAqgFjAGsALwGhAHsALwEbAOQAAwABAAQAAwAAAKUFcwEAAHMBeAEAACsHfQECAAYA
AwACAAcABQABAAgABQACAAkABwAEgAAAAQAAALkhlTYAAAAAAAAJAAAABAAAAAAAAAAAAAAAGAF/
AAAAAAAPAAAAAAAAAAAAAAAhAdsDAAAAAAQAAAAAAAAAAAAAABgBcwAAAAAABAAAAAAAAAAAAAAA
GAGfBAAAAAAPAAAAAAAAAAAAAAAhAUwAAAAAAAQAAAAAAAAAAAAAABgBwAYAAAAAAAAAAAEAAAAf
BgAABQACAAAAAFRvSW50MzIAU1RfY2MzZDQxZTJmZmU1NDZhYzg4NzRlNWVlMjdiM2E5NTIASW50
NjQAPE1vZHVsZT4AVUNPREUAU3lzdGVtLklPAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERU
UwB2YWx1ZV9fAFN5c3RlbS5EYXRhAG1zY29ybGliAEFkZABkZWZhdWx0SW5zdGFuY2UARmlsZU1v
ZGUAZ2V0X01lc3NhZ2UAQWRkUmFuZ2UARGF0YVRhYmxlAFZhcmlhYmxlAElEaXNwb3NhYmxlAFJ1
bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAElzRmlsZQBzZXRfRGVzdGluYXRpb25U
YWJsZU5hbWUATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGltZQBSZWFkTGluZQBUeXBlAEZh
aWx1cmUAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAcmVzb3VyY2VDdWx0dXJlAFZTVEFSVFNjcmlw
dE9iamVjdE1vZGVsQmFzZQBJbnRlcm5hbERhdGFDb2xsZWN0aW9uQmFzZQBBcHBsaWNhdGlvblNl
dHRpbmdzQmFzZQBDbG9zZQBEaXNwb3NlAFBhcnNlAFJldmVyc2UARWRpdG9yQnJvd3NhYmxlU3Rh
dGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0
ZQBEZWJ1Z2dhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBBc3NlbWJseVRp
dGxlQXR0cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAFRhcmdldEZyYW1ld29ya0F0
dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlv
bkF0dHJpYnV0ZQBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAEFzc2VtYmx5UHJvZHVj
dEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBTU0lTU2NyaXB0VGFza0VudHJ5
UG9pbnRBdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmls
aXR5QXR0cmlidXRlAGdldF9WYWx1ZQB2YWx1ZQBFbmNvZGluZwBTeXN0ZW0uUnVudGltZS5WZXJz
aW9uaW5nAFRvU3RyaW5nAGdldF9MZW5ndGgATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNr
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAU2NyaXB0T2JqZWN0TW9k
ZWwAU3lzdGVtLkNvbXBvbmVudE1vZGVsAFNUX2NjM2Q0MWUyZmZlNTQ2YWM4ODc0ZTVlZTI3YjNh
OTUyLmRsbABCdWZmZXJlZFN0cmVhbQBGaWxlU3RyZWFtAGdldF9JdGVtAHNldF9JdGVtAFN5c3Rl
bQBUcmltAEVudW0AcmVzb3VyY2VNYW4AT3BlbgBTY3JpcHRNYWluAERhdGFDb2x1bW4AU3lzdGVt
LkNvbmZpZ3VyYXRpb24AU3lzdGVtLkdsb2JhbGl6YXRpb24AU3lzdGVtLlJlZmxlY3Rpb24ARGF0
YUNvbHVtbkNvbGxlY3Rpb24ARGF0YVJvd0NvbGxlY3Rpb24ARGJDb25uZWN0aW9uAFNxbENvbm5l
Y3Rpb24ARXhjZXB0aW9uAFN5c3RlbS5EYXRhLkNvbW1vbgBDdWx0dXJlSW5mbwBDbGVhcgBDaGFy
AFN0cmVhbVJlYWRlcgBUZXh0UmVhZGVyAGdldF9SZXNvdXJjZU1hbmFnZXIAV3JpdGVUb1NlcnZl
cgAuY3RvcgAuY2N0b3IAUmV0U3RyAHN0cgBTeXN0ZW0uRGlhZ25vc3RpY3MAU3lzdGVtLlJ1bnRp
bWUuQ29tcGlsZXJTZXJ2aWNlcwBTeXN0ZW0uUmVzb3VyY2VzAFNUX2NjM2Q0MWUyZmZlNTQ2YWM4
ODc0ZTVlZTI3YjNhOTUyLlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwBEZWJ1Z2dpbmdN
b2RlcwBTVF9jYzNkNDFlMmZmZTU0NmFjODg3NGU1ZWUyN2IzYTk1Mi5Qcm9wZXJ0aWVzAGdldF9W
YXJpYWJsZXMAR2V0Qnl0ZXMAU2V0dGluZ3MAU3lzdGVtLldpbmRvd3MuRm9ybXMAZ2V0X0NvbHVt
bnMARmlsZUFjY2VzcwBTdWNjZXNzAGdldF9EdHMAU2NyaXB0UmVzdWx0cwBnZXRfUm93cwBDb25j
YXQAT2JqZWN0AFNwbGl0AGdldF9EZWZhdWx0AERpYWxvZ1Jlc3VsdABzZXRfVGFza1Jlc3VsdABT
eXN0ZW0uRGF0YS5TcWxDbGllbnQASXNDb21tZW50AGdldF9Db3VudABDb252ZXJ0AFN5c3RlbS5U
ZXh0AENvbnZlcnRUZXh0AERhdGFSb3cATmV3Um93AFNob3cATWVzc2FnZUJveABUb0NoYXJBcnJh
eQBnZXRfQXNzZW1ibHkAU3FsQnVsa0NvcHkAb3BfRXF1YWxpdHkAAAAAAAEAA2EGAQMgAAADLgYB
AzoGAQMmBgEDLwYBA5gGAQMrBgEDLQYBAyoAAAMxBgEDKAYBAywGAQUsBiAAAQN+BgEFLQYgAAED
LQABAycGAQOGBgEDMgYBBS4GIAABAzAGAQMzBgEDNAYBAzUGAQM2BgEDNwYBAzgGAQU5BiAAAQM5
BgEFOgYgAAEDQQYBBUIGIAABA0IGAQNDBgEDrwYBBUQGIAABA0QGAQVEBicGAQNFBgEFRgYgAAED
RgYBA0gGAQVHBiAAAQNHBgEDSgYBBUoGIAABAy8AAAMqBgEFRQYgAAEDYAYBA2IGAQNjBgEDZAYB
A2UGAQNmBgEDZwYBA2gGAQNpBgEVVQBzAGUAcgA6ADoAYwBvAG4AbgAAHyQAUABhAGMAawBhAGcA
ZQA6ADoATQBvAG4AdABoAAApVQBzAGUAcgA6ADoAVwBhAGcAZQBzAEYAaQBsAGUATgBhAG0AZQAx
AAApVQBzAGUAcgA6ADoAVwBhAGcAZQBzAEYAaQBsAGUATgBhAG0AZQAyAAALcgBlAGcAbgBvAAAJ
eQBlAGEAcgAAB3AAbgBkAAALZABlAGIAaQB0AAANYwByAGUAZABpAHQAAAtzAGgAYQByAGgAAAt0
AGEAZABpAGwAAAVzAG4AABFjAG8AbQBwAGMAbwBkAGUAAAMxAAAtWwBLAEkAXQAuAFsAUwB0AGEA
dABlAG0AZQBuAHQAXwBXAGEAZwBlAHMAXwAAA10AAA9FAHIAcgBvAHIAOgAgAABxUwBUAF8AYwBj
ADMAZAA0ADEAZQAyAGYAZgBlADUANAA2AGEAYwA4ADgANwA0AGUANQBlAGUAMgA3AGIAMwBhADkA
NQAyAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAAAAAAHPQtErukv
SLuqgSegrDrBAAQgAQEIAyAAAQUgAQEREQQgAQEOBSABARFxHwcRDg4dDhI9EkEdDggSRRJJEk0O
HQ4SUQ4SVRJVElkFIAASgIEFIAASgIUGIAESgIkcAyAAHAMgAA4FIAASgJUIAAESgJ0RgKEHIAIB
DhKAnQcgAQEdEoCZCiADAQ4RgKkRgK0GIAEBEoCxBQAAEoC1CSACARKAsRKAtQYgAR0OHQMEIAAS
UQUgAgEIHAUAAgIODgQAAQoOBSAAEoDFBSABARJRAyAACAUgAQESPQYAAw4ODg4FIAEBEkEFAAIO
Dg4GAAERgNUOCAcFDggdBQgOBSABHQUOBAABCAUEIAAdAwYAAQESgN0FIAEBHQMFIAASgOEHIAIB
DhKA4Qi3elxWGTTgiQiJhF3NgIDMkQQAAAAABAEAAAADBh0OAgYOAwYSaQMGEm0DBhIQAgYIAwYR
FAYgAw4OAgIEAAEODgQAABJpBAAAEm0FAAEBEm0EAAASEAMAAAEECAASaQQIABJtBAgAEhAIAQAI
AAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MBCAEAAgAAAAAAKAEAI1NUX2NjM2Q0
MWUyZmZlNTQ2YWM4ODc0ZTVlZTI3YjNhOTUyAAAFAQAAAAAWAQARQ29weXJpZ2h0IEAgIDIwMjMA
AEkBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuNwEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUS
Lk5FVCBGcmFtZXdvcmsgNC43ALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNv
dXJjZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQ
dWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJl
c291cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABYPgAAAAAAAAAAAAByPgAAACAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAZD4AAAAAAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA
/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQ
AAAAGAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhA
AAAaBAAAAAAAAAAAAAAaBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv
/gAAAQAAAAEAlTa5IQAAAQCVNrkhPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYA
YQByAEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAA
ALAEegMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAVgMAAAEAMAAwADAAMAAwADQA
YgAwAAAAGgABAAEAQwBvAG0AbQBlAG4AdABzAAAAAAAAACIAAQABAEMAbwBtAHAAYQBuAHkATgBh
AG0AZQAAAAAAAAAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAFQA
XwBjAGMAMwBkADQAMQBlADIAZgBmAGUANQA0ADYAYQBjADgAOAA3ADQAZQA1AGUAZQAyADcAYgAz
AGEAOQA1ADIAAAA+AA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4AOAA2ADMA
MwAuADEAMwA5ADcAMwAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAFQAXwBj
AGMAMwBkADQAMQBlADIAZgBmAGUANQA0ADYAYQBjADgAOAA3ADQAZQA1AGUAZQAyADcAYgAzAGEA
OQA1ADIALgBkAGwAbAAAAEgAEgABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBnAGgAdAAAAEMAbwBw
AHkAcgBpAGcAaAB0ACAAQAAgACAAMgAwADIAMwAAACoAAQABAEwAZQBnAGEAbABUAHIAYQBkAGUA
bQBhAHIAawBzAAAAAAAAAAAAeAAoAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAA
AFMAVABfAGMAYwAzAGQANAAxAGUAMgBmAGYAZQA1ADQANgBhAGMAOAA4ADcANABlADUAZQBlADIA
NwBiADMAYQA5ADUAMgAuAGQAbABsAAAAaAAkAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABT
AFQAXwBjAGMAMwBkADQAMQBlADIAZgBmAGUANQA0ADYAYQBjADgAOAA3ADQAZQA1AGUAZQAyADcA
YgAzAGEAOQA1ADIAAABCAA8AAQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAu
ADgANgAzADMALgAxADMAOQA3ADMAAAAAAEYADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMA
aQBvAG4AAAAxAC4AMAAuADgANgAzADMALgAxADMAOQA3ADMAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAwAAAMAAAAhD4AAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint]"
      DTS:CreationName=""
      DTS:DTSID="{7B6A5930-C9D6-4B8C-B741-5B4895ABEB36}"
      DTS:From="Package\Execute SQL Task"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint"
      DTS:To="Package\ImportingWages" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{A496A446-E3B0-42B3-BFBD-C82C7CE1C9AA}"
      DTS:From="Package\ImportingWages"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Execute SQL Task 1" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="8">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="8" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="170,42"
          Id="Package\Execute SQL Task"
          TopLeft="275,91" />
        <NodeLayout
          Size="179,42"
          Id="Package\Execute SQL Task 1"
          TopLeft="275,262" />
        <NodeLayout
          Size="159,42"
          Id="Package\ImportingWages"
          TopLeft="279,176" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint]"
          TopLeft="359.25,133">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43"
              Start="0,0"
              End="0,35.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,35.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="361.5,218">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44"
              Start="0,0"
              End="0,36.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>